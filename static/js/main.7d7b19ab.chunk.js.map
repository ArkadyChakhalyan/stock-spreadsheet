{"version":3,"sources":["components/pages/stocks/stock-info/stock-info.module.css","components/header/holdings/holdings.module.css","components/pages/stocks/popups/popup.module.css","components/pages/dividends/popups/dividend-popup.module.css","components/pages/stocks/stock-info/holdings/holdings.module.css","ui/table/table.module.css","ui/stock-miniature/stock-miniature.module.css","components/pages/allocation/allocation.module.css","components/pages/stocks/stock-info/sales-chart/sales-chart.module.css","ui/input/input.module.css","ui/tabs/tabs.module.css","components/pages/stocks/stocks.module.css","components/pages/miniatures/miniatures.module.css","ui/popup/popup.module.css","components/pages/dividends/dividends-period/dividends-period.module.css","components/pages/dividends/dividends.module.css","ui/button/button.module.css","ui/charts/charts.module.css","components/header/header.module.css","components/pages/dividends/dividends-recieved/dividends-recieved.module.css","components/pages/dividends/dividends-sector/dividends-sector.module.css","ui/button/button.js","ui/charts/collumn-chart.js","ui/charts/pie-chart.js","ui/charts/line-chart.js","ui/input/input.js","ui/popup/popup.js","ui/spinner/spinner.js","actions/index.js","stock-service-context/stock-service-context.js","components/hoc/withStockService.js","utils/compose.js","components/pages/stocks/popups/add-stock-popup.js","utils/stock-request-throttle.js","components/pages/stocks/popups/edit-stock-popup.js","components/pages/stocks/stock-info/holdings/holdings.js","components/pages/stocks/stock-info/sales-chart/sales-chart.js","components/pages/stocks/stock-info/stock-info.js","components/pages/stocks/popups/stock-popup.js","ui/stock-miniature/stock-miniature.js","ui/table/table.js","ui/tabs/tabs.js","components/header/menu/menu.js","components/header/holdings/holdings-allocation.js","components/header/holdings/holdings-dividends.js","components/header/holdings/holdings-gains.js","components/header/header.js","components/pages/miniatures/miniatures-allocation.js","components/pages/miniatures/miniatures-dividends.js","components/pages/miniatures/miniatures-gains.js","components/pages/dividends/dividends-period/monthly.js","components/pages/dividends/dividends-period/yearly.js","components/pages/dividends/dividends-period/dividends-period.js","components/pages/dividends/popups/dividend-popup.js","components/pages/dividends/popups/dividend-popup-empty.js","components/pages/dividends/dividends-recieved/devidends-recieved.js","components/pages/dividends/dividends-sector/dividends-sector.js","components/pages/dividends/dividends.js","components/pages/stocks/stocks.js","components/pages/allocation/allocation-sector-contry/allocation-country.js","components/pages/allocation/allocation-sector-contry/allocation-sector.js","components/pages/allocation/allocation.js","components/app/app.js","reducers/dividends.js","reducers/newStock.js","reducers/portfolio.js","store.js","reducers/index.js","index.js","service/stock-service.js","service/api-key.js"],"names":["module","exports","Button","navigation","icon","width","onClick","children","color","disabled","insertIcon","className","styles","text","button","round","style","backgroundColor","CollumnChart","data","scaleData","double","horizontal","useState","window","innerWidth","windowWidth","setWindowWidth","func","useEffect","addEventListener","removeEventListener","chart","canvasRef","useRef","canvas","current","rect","getBoundingClientRect","canvasWidth","canvasHeight","height","context","setupCanvas","chartHorizontal","chartDouble","chartVertical","ref","ctx","highestCollumnIdx","numberOfCollumns","length","padding","inBetween","largestNum","i","lineY","scales","textWidth","measureText","Math","font","fillStyle","textStart","fillText","lineStart","line","Path2D","fill","collumnWidth","collumn","collumnHeight","longestRow","numberOfRows","key","textMiddle","lineX","textMarginBottom","rowHeight","row","rowWidth","top","zeroHeight","largestRevenue","lowestPoint","revenue","earnings","margin","collumnOne","collumnTwo","date","dpr","devicePixelRatio","rectParent","parentElement","getContext","scale","PieChart","startAngle","endAngle","x","y","colors","calculateStart","calculateEnd","beginPath","moveTo","arc","idx","degreeToRadians","calculateEndAngle","parseFloat","angle","PI","LineChart","lineChart","highestPoint","lineWidth","strokeStyle","oldPrice","t","price","lineTo","stroke","closePath","currentPriceCollumnHeight","Input","label","value","onChange","onFocus","onBlur","error","errorMessage","focus","inputClassName","field","labelClassName","errorNotification","messsage","empty","input","type","required","autoFocus","Popup","onClose","head","inside","onKeyPress","document","body","overflow","close","popup","content","bg","e","stopPropagation","Spinner","addStock","stock","ticker","avarageCost","shares","stockLoaded","stockError","fetchStock","stockService","dispatch","a","getStock","then","clearState","load","ready","setTimeout","React","createContext","StockServiceProvider","Provider","StockServiceConsumer","Consumer","withStockService","Wrapped","props","compose","funcs","comp","reduceRight","wrapped","f","AddStockPopup","connect","newStock","loading","bindActionCreators","change","setErrorPrice","setErrorShares","tickerValue","setTickerValue","priceValue","setPriceValue","sharesValue","setSharesValue","rgxNum","rgxStr","onSubmit","finalTicker","setErrorTicker","match","errorTicker","errorShares","errorPrice","toUpperCase","symbol","console","log","requestStock","ms","requestFunction","stockInfo","stockRequested","stockRequestWrapper","arguments","this","apply","stockRequestThrottle","toString","headSmall","company","barSmall","spinner","insideSmall","target","submit","code","mapDispatchToProps","editStock","editedStock","EditStockPopup","rgx","longName","select","deleteStock","deletedStockTicker","Holdings","onDeleteStock","popupOn","setPopupOn","currentPrice","container","holdings","background","number","buttons","SalesChart","yearly","years","group","low","ceil","j","push","scalesCopy","unshift","StockInfo","getData","chartData","valuation","marketCap","enterpriseValue","priceToBook","priceToSalesTrailing12Months","trailingPE","forwardPE","priceToFreeCashFlow","dividendRate","dividendYield","payoutRatio","freeCashFlowPerStock","totalCash","totalDebt","about","country","sector","description","longBusinessSummery","dataArr","StockPopup","stocks","portfolio","find","item","bar","StockMiniature","gain","percent","up","down","stockPopupOn","setStockPopupOn","stockPopup","left","right","Table","collumns","bottom","onlyDesktop","map","index","th","foot","rows","td","tr","tableClassName","table","tableOnlyDesktop","thead","tbody","tfoot","Tabs","options","small","opened","tab","single","barClassName","activeTab","indexOf","active","setActive","smalltab","smallbar","elements","itemClassName","to","Menu","HoldingsAllocation","allocationSector","allocationCountry","sectors","countries","total","gains","HoldingsDividends","totalDividends","totalValue","totalGains","yieldOnCost","paidPerMonth","HoldingsGains","gainTotal","gainMonth","Header","useLocation","pathname","substring","header","name","path","component","MiniaturesAllocation","stocksCopy","sort","b","stock1","stock2","stock3","stock4","stock5","stock6","miniatures","MiniaturesDividends","MiniaturesGains","Monthly","paidByMonth","paid","slice","month","Date","getMonth","splice","Yearly","paidByYear","DividendsPeriod","dividends","setLoading","history","useHistory","replace","switch","title","DividendPopup","addDividend","year","dividendAmount","dividend","setDividend","setError","DividendPopupEmpty","message","addYear","DividendsRecieved","dividendsRecieved","currentMonth","getFullYear","setYear","tableData","setDividendAmount","setMonth","upcoming","setUpcoming","arrows","requestedMonth","DividendsSector","obj","arr","newObj","Dividends","addStockPopupOn","setAddStockPopupOn","addStockPopup","page","Stocks","fakeLoading","setTicker","onClickAddStock","AllocationCountry","AllocationSector","Allocation","App","from","state","action","currentYear","undefined","updateEmpty","yearIdx","findIndex","monthIdx","newPayment","newDividendsData","newYear","newDividendsRecieved","add","edit","deleted","updatePortfolio","stockList","newTotalValue","totalCost","newTotalGains","newTableData","newTotalDividends","newAllocationSector","newAllocationCountry","newStocks","newShares","newAvarageCost","editedStocks","updatedStocks","persistedState","localStorage","getItem","JSON","parse","store","createStore","applyMiddleware","thunk","subscribe","setItem","stringify","getState","getRes","fetch","res","ok","Error","status","json","Promise","resolve","_transformStock","transformYearly","raw","summaryProfile","longBusinessSummary","financialData","fmt","summaryDetail","freeCashFlow","freeCashflow","sharesOutstanding","defaultKeyStatistics","totalRevenue","amount","open","high","numerator","denominator","splitRatio","financialsChart","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7d7b19ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stock-info_container__WmMMo\",\"valuation\":\"stock-info_valuation__CvxRH\",\"group\":\"stock-info_group__3hsv6\",\"line\":\"stock-info_line__3oB_J\",\"label\":\"stock-info_label__32eLy\",\"number\":\"stock-info_number__1dYm9\",\"about\":\"stock-info_about__kWvXC\",\"description\":\"stock-info_description__2_9hW\",\"chart\":\"stock-info_chart__3L-V0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"holdings_container__2GO3M\",\"gains\":\"holdings_gains__2P5fM\",\"label\":\"holdings_label__6VkHw\",\"total\":\"holdings_total__3nKrf\",\"right\":\"holdings_right__1bFOu\",\"number\":\"holdings_number__Tc6FM\",\"left\":\"holdings_left__3xN_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"popup_head__2jbBI\",\"company\":\"popup_company__OZSE_\",\"ticker\":\"popup_ticker__h2U-8\",\"bar\":\"popup_bar__BCOCo\",\"inside\":\"popup_inside__3ht0f\",\"headSmall\":\"popup_headSmall__1LcIt\",\"barSmall\":\"popup_barSmall__KK_MM\",\"insideSmall\":\"popup_insideSmall__2m56U\",\"spinner\":\"popup_spinner__3yKCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"dividend-popup_head__2A2oe\",\"company\":\"dividend-popup_company__29iOd\",\"ticker\":\"dividend-popup_ticker__KWKF3\",\"bar\":\"dividend-popup_bar__1jbwf\",\"inside\":\"dividend-popup_inside__LGp_V\",\"message\":\"dividend-popup_message__1lPPG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"holdings_container__16d4T\",\"holdings\":\"holdings_holdings__1U7Au\",\"data\":\"holdings_data__wp8AT\",\"label\":\"holdings_label__2SQaU\",\"number\":\"holdings_number__2N_h3\",\"buttons\":\"holdings_buttons__3uaE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableOnlyDesktop\":\"table_tableOnlyDesktop__365-C\",\"table\":\"table_table__3EbJZ\",\"td\":\"table_td__1seqd\",\"tr\":\"table_tr__3Hkq2\",\"th\":\"table_th__2h3o9\",\"thead\":\"table_thead__3acKc\",\"tbody\":\"table_tbody__3W1UZ\",\"tfoot\":\"table_tfoot__uLQOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stock-miniature_container__3q1yY\",\"company\":\"stock-miniature_company__2O68-\",\"ticker\":\"stock-miniature_ticker__15DVj\",\"number\":\"stock-miniature_number__OPFLv\",\"percent\":\"stock-miniature_percent__2jkgu\",\"right\":\"stock-miniature_right__DAC7u\",\"up\":\"stock-miniature_up__gVWwT\",\"down\":\"stock-miniature_down__JsFp1\",\"popup\":\"stock-miniature_popup__2qQxa\",\"left\":\"stock-miniature_left__1t0OC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"allocation_container__2fei8\",\"chart\":\"allocation_chart__2bJwK\",\"switch\":\"allocation_switch__34oiZ\",\"empty\":\"allocation_empty__1VIRn\",\"text\":\"allocation_text__3LX31\",\"page\":\"allocation_page__juaCl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sales-chart_container__5mP3c\",\"group\":\"sales-chart_group__1QjJM\",\"label\":\"sales-chart_label__2ikbR\",\"revenue\":\"sales-chart_revenue__3_eTv\",\"earnings\":\"sales-chart_earnings__iqSD-\",\"line\":\"sales-chart_line__SE9kp\",\"chart\":\"sales-chart_chart__34rq3\",\"years\":\"sales-chart_years__1Ixm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__3aJoa\",\"field\":\"input_field__3Adsk\",\"label\":\"input_label__3kmtQ\",\"error\":\"input_error__3dcQP\",\"messsage\":\"input_messsage__2Hp6Q\",\"empty\":\"input_empty__3G23P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"tabs_tab__2LVIU\",\"single\":\"tabs_single__eM6bh\",\"smalltab\":\"tabs_smalltab__1_zzU\",\"active\":\"tabs_active__101BC\",\"bar\":\"tabs_bar__1rx7D\",\"smallbar\":\"tabs_smallbar__3LJfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"stocks_empty__23KOy\",\"text\":\"stocks_text__wCm3y\",\"button\":\"stocks_button__2IjhX\",\"page\":\"stocks_page__30Va-\",\"table\":\"stocks_table__1zYcl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"miniatures\":\"miniatures_miniatures__20buf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"popup_popup__e5EAM\",\"content\":\"popup_content__rLUFN\",\"bg\":\"popup_bg__2_mwx\",\"close\":\"popup_close__P8Ci1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dividends-period_container__3Da0K\",\"switch\":\"dividends-period_switch__3ouZT\",\"text\":\"dividends-period_text__2j29z\",\"title\":\"dividends-period_title__2Dt8c\",\"content\":\"dividends-period_content__3gb6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"dividends_page__ILYFm\",\"container\":\"dividends_container__98JXM\",\"empty\":\"dividends_empty__1-IBX\",\"text\":\"dividends_text__1aSom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2CF7H\",\"icon\":\"button_icon__3F3Wb\",\"text\":\"button_text__2vQXl\",\"round\":\"button_round__pKY-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"charts_canvas__QFOTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"name\":\"header_name__1qEgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dividends-recieved_container__3YaTV\",\"arrows\":\"dividends-recieved_arrows__1pObP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dividends-sector_container__22zLl\",\"content\":\"dividends-sector_content__HxueQ\",\"text\":\"dividends-sector_text__7JiGu\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './button.module.css';\n\n/**\n * Button.\n * @param {object} props - Props.\n * @param {Function} props.onClick - Event on button click.\n * @param {string} props.children - Labal of a button.\n * @param {(string|number)} props.width - Width of a button.\n * @param {boolean} props.navigation - Small button without borders on true.\n * @param {string} props.icon - Icon name from font-awesome.\n * @param {string} props.color - Background color of a button.\n * @param {boolean} props.disabled - Disabled button.\n * @returns {Element} Button component.\n */\nexport const Button = ({ navigation, icon, width, onClick, children, color, disabled }) => {\n\n  const insertIcon = icon ? <i className={`${icon} ${styles.icon}`} /> : null;\n  const text = children ? <p className={styles.text}>{children}</p> : null;\n  let className = `${styles.button} `;\n  if (navigation) className += styles.round;\n\n  return (\n    <button\n      className={className}\n      onClick={onClick}\n      disabled={disabled}\n      style={{ width: `${width}px`, backgroundColor: color }}>\n      {insertIcon}\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  navigation: PropTypes.bool,\n  icon: PropTypes.string,\n  width: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number\n  ]),\n  onClick: PropTypes.func,\n  children: PropTypes.string,\n  color: PropTypes.string,\n  disabled: PropTypes.bool\n}","import React, { useEffect, useRef, useState } from 'react';\nimport styles from './charts.module.css'\nimport PropTypes from 'prop-types';\n\n/**\n * Collumn chart.\n * @param {object} props - Props.\n * @param {number[] | object} props.data - Chart data.\n * @param {Function} props.scaleData - Scale data for chart.\n * @param {boolean} props.double - True for charts with double collumns.\n * @param {boolean} props.horizontal - True for horizontal collumns.\n * @returns {Element} CollumnChart component.\n */\nexport const  CollumnChart = ({ data, scaleData, double, horizontal })  => {\n\n    let [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    \n    const func = () => {\n        setWindowWidth(window.innerWidth);\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', func);\n        return () => { \n            window.removeEventListener('resize', func);\n        }\n    }, [windowWidth]);\n    \n    const canvasRef = useRef(null);\n\n    let chart;\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        let canvasWidth = rect.width;\n        let canvasHeight = rect.height;\n        const context = setupCanvas(canvas);\n        \n        if (horizontal) chart = chartHorizontal(context, canvasHeight, canvasWidth, scaleData, data);\n        else if (double) chart = chartDouble(context, canvasHeight, canvasWidth, scaleData, data);\n        else chart = chartVertical(context, canvasHeight, canvasWidth, scaleData, data);\n\n    }, [chart, windowWidth])\n\n    return (\n        <canvas\n            className={styles.canvas}\n            ref={canvasRef} />\n    )\n};\n\nconst chartVertical = (ctx, canvasHeight, canvasWidth, scaleData, data) => {\n    \n    const numberOfCollumns = data.length;\n\n    let padding = 16;\n    let inBetween = 4;\n    if (data.length > 30) inBetween = 2;\n    else if (data.length > 50) inBetween = 1;\n    else if (data.length > 100) inBetween = 0.5;\n\n    let highestCollumnIdx;\n    let largestNum = 0;\n\n    for (let i = 0; i < numberOfCollumns; i++) {\n        if (+data[i] > largestNum) {\n            largestNum = data[i];\n            highestCollumnIdx = i;\n        }\n    }\n\n    let lineY = canvasHeight - 1;\n    const scales = scaleData(data, highestCollumnIdx);\n    let textWidth = ctx.measureText(`$${scales[scales.length - 1]}`).width + 10;\n    if (scales[scales.length - 1] > 999) {\n        textWidth = ctx.measureText(`$${Math.round(scales[scales.length - 1] / 1000 * 10) / 10}k`).width + 25;\n    }\n\n    for (let i = 0; i < scales.length; i++) {\n\n        ctx.font = `10pt Roboto`;\n        ctx.fillStyle = 'rgb(102, 102, 102)';\n\n        if (scales[i] > 999) {\n\n            const textStart = textWidth - ctx.measureText(`$${Math.round(scales[i] / 1000 * 10) / 10}k`).width\n\n            ctx.fillText(`$${Math.round(scales[i] / 1000 * 10) / 10}k`, textStart, lineY);\n\n        } \n        else if (scales[i] === 0) {\n\n            const textStart = textWidth - ctx.measureText(0).width;\n\n            ctx.fillText(0, textStart, lineY);\n\n        } else {\n            const textStart = textWidth - ctx.measureText(`$${scales[i]}`).width\n\n            ctx.fillText(`$${scales[i]}`, textStart, lineY);\n        }\n\n        const lineStart = textWidth + 8;\n\n        const line = new Path2D('2d');\n\n        if (i === 0) {\n            line.rect(lineStart, lineY - 5, canvasWidth - lineStart, 2);\n\n            ctx.fillStyle = 'rgb(102, 102, 102)';\n            ctx.fill(line);\n        } else {\n            line.rect(lineStart, lineY - 5, canvasWidth - lineStart, 1);\n\n            ctx.fillStyle = 'lightgray';\n            ctx.fill(line);\n        }\n\n        lineY -= canvasHeight / 6;\n    }\n\n    let collumnWidth = (canvasWidth - textWidth + 10 - padding * 2 - numberOfCollumns * inBetween) / numberOfCollumns;\n\n    if (numberOfCollumns < 6 && canvasWidth < 450) {\n        collumnWidth = 90;\n        padding = (canvasWidth - collumnWidth * numberOfCollumns - inBetween * numberOfCollumns) / 2;\n    }\n    else if (numberOfCollumns < 6) {\n        collumnWidth = 160;\n        padding = (canvasWidth - collumnWidth * numberOfCollumns - inBetween * numberOfCollumns) / 2;\n    }\n\n    for (let i = 0; i < numberOfCollumns; i++) {\n\n        const collumn = new Path2D('2d');\n\n        let collumnHeight = canvasHeight - canvasHeight / 6;\n\n        collumnHeight = data[i] / scales[scales.length - 1] * collumnHeight;\n        collumn.rect(padding + textWidth, canvasHeight - 6 - collumnHeight, collumnWidth, collumnHeight);\n\n        ctx.fillStyle = 'dodgerblue';\n        ctx.fill(collumn);\n\n        padding += collumnWidth + inBetween;\n    }\n\n};\n\nconst chartHorizontal = (ctx, canvasHeight, canvasWidth, scaleData, data) => {\n\n    let numberOfRows = 0;\n\n    let longestRow;\n    let largestNum = 0;\n\n    for (let key in data) {\n        numberOfRows++;\n        if (data[key] > largestNum) {\n            largestNum = data[key];\n            longestRow = key;\n        }\n    }\n\n    let lineX = canvasWidth - 16;\n    const scales = scaleData(data, longestRow);\n\n    const textMarginBottom = 1;\n    const marginBottom = textMarginBottom + 24;\n    let textMiddle;\n\n    for (let i = 0; i < scales.length; i++) {\n\n        ctx.font = '11pt Roboto';\n        ctx.fillStyle = 'rgb(102, 102, 102)';\n\n        if (scales[i] > 999) {\n            textMiddle = ctx.measureText(`$${Math.round((scales[i] / 1000) * 10) / 10}k`).width / 2 - 1;\n            ctx.fillText(`$${Math.round(scales[i] / 1000 * 10) / 10}k`, canvasWidth - lineX - textMiddle, canvasHeight - textMarginBottom);\n        } \n        else if (scales[i] === 0) {\n            textMiddle = ctx.measureText(0).width / 2 - 1;\n            ctx.fillText(0, canvasWidth - lineX - textMiddle, canvasHeight - textMarginBottom);\n        } else {\n            textMiddle = ctx.measureText(`$${Math.round(scales[i])}`).width / 2 - 1;\n            ctx.fillText(`$${Math.round(scales[i])}`, canvasWidth - lineX - textMiddle, canvasHeight - textMarginBottom);\n        }\n\n        const line = new Path2D('2d');\n\n        if (i === 0) {\n            line.rect(canvasWidth - lineX, 0, 2, canvasHeight - marginBottom);\n\n            ctx.fillStyle = 'rgb(102, 102, 102)';\n            ctx.fill(line);\n        } else {\n            line.rect(canvasWidth - lineX, 0, 1, canvasHeight - marginBottom);\n\n            ctx.fillStyle = 'lightgray';\n            ctx.fill(line);\n        }\n\n        lineX -= canvasWidth / 9;\n    }\n    \n    let padding = 20;\n    const inBetween = 4\n\n    let rowHeight = (canvasHeight - marginBottom - padding - inBetween * numberOfRows - 25) / numberOfRows;\n    \n    if (numberOfRows < 8) {\n        rowHeight = 88;\n        padding = (canvasHeight - rowHeight * numberOfRows - inBetween * numberOfRows - 25) / 2;\n    }\n    \n    for (let key in data) {\n\n        const row = new Path2D('2d');\n        \n        let rowWidth = canvasWidth - canvasWidth / 9;\n\n        rowWidth = data[key] / scales[scales.length - 1] * rowWidth - 1;\n        row.rect(18, padding, rowWidth, rowHeight);\n\n        ctx.fillStyle = 'dodgerblue';\n        ctx.fill(row);\n\n        const font = (numberOfRows) => {\n            switch (numberOfRows) {\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                    return 17;\n                case 8:\n                    return 16;\n                case 9:\n                    return 15;\n                case 10:\n                    return 14;\n                case 11:\n                    return 13;\n            }\n        }\n\n        ctx.font = `${font(numberOfRows)}pt Roboto`;\n        ctx.fillStyle = 'white';\n        if (rowWidth > ctx.measureText(key).width + 20) {\n            ctx.fillText(key, rowWidth - ctx.measureText(key).width, (rowHeight + 16) / 2 + padding);\n        }\n\n        padding += rowHeight + inBetween;\n    }\n    \n};\n\nconst chartDouble = (ctx, canvasHeight, canvasWidth, scaleData, data) => {\n\n    let numberOfCollumns = 0;\n\n    for (let key in data) {\n        if (data[key]) numberOfCollumns++;\n    }\n    \n    let paddingBottom = 40;\n\n    let zeroHeight = 1;\n\n    let highestCollumnIdx;\n    let largestRevenue = 0;\n    let lowestPoint = 0;\n\n    for (let key in data) {\n        if (data[key].revenue > largestRevenue) {\n            largestRevenue = data[key].revenue;\n            highestCollumnIdx = key;\n        }\n        if (data[key].earnings < lowestPoint) {\n            lowestPoint = data[key].earnings;\n        }\n    }\n\n    let top;\n    let lineY = canvasHeight - paddingBottom;\n    const scales = scaleData(data, highestCollumnIdx, lowestPoint);\n\n    let textWidth = ctx.measureText(`${scales[scales.length - 1]}M`).width + 8;\n    if (scales[scales.length - 1] > 999) {\n        textWidth = ctx.measureText(`${Math.round(scales[scales.length - 1] / 1000)}B`).width  + 8;\n    }\n    \n    for (let i = 0; i < scales.length; i++) {\n        \n        ctx.font = `8pt Roboto`;\n        ctx.fillStyle = 'rgb(102, 102, 102)';\n\n        if (scales[i] > 999 || -scales[i] > 999) {\n\n            const textStart = textWidth - ctx.measureText(`${Math.round(scales[i] / 1000)}B`).width\n\n            ctx.fillText(`${Math.round(scales[i] / 1000)}B`, textStart, lineY);\n\n        }\n        else if (scales[i] === 0) {\n            const textStart = textWidth - ctx.measureText(`${scales[i]}`).width\n            \n            ctx.fillText(0, textStart, lineY);\n\n        } else {\n            const textStart = textWidth - ctx.measureText(`${scales[i]}M`).width\n\n            ctx.fillText(`${scales[i]}M`, textStart, lineY);\n        }\n\n        const lineStart = textWidth + 12;\n\n        const line = new Path2D('2d');\n\n        if (scales[scales.length - 1]) top = lineY - 4;\n\n        if (scales[i] === 0) {\n\n            zeroHeight = lineY - 4;\n\n            line.rect(lineStart, zeroHeight, canvasWidth - lineStart, 2);\n\n            ctx.fillStyle = 'rgb(102, 102, 102)';\n            ctx.fill(line);\n        } else {\n            line.rect(lineStart, lineY - 4, canvasWidth - lineStart, 1);\n\n            ctx.fillStyle = 'lightgray';\n            ctx.fill(line);\n        }\n\n        lineY -= (canvasHeight - paddingBottom) / scales.length;\n    }\n\n    let collumnWidth = 40;\n    let margin = 44;\n    let inBetween = 80;\n\n    if (canvasWidth < 450) {\n        collumnWidth = 20;\n        margin = 24;\n        inBetween = 60;\n    }\n    \n    let padding = (canvasWidth - textWidth - (margin + collumnWidth) * numberOfCollumns) / numberOfCollumns;\n    \n\n    for (let key in data) {\n\n        const collumnOne = new Path2D('2d');\n\n        let collumnHeight = canvasHeight - (canvasHeight - zeroHeight) - top;\n\n        collumnHeight = data[key].revenue / scales[scales.length - 1] * collumnHeight;\n        collumnOne.rect(padding + textWidth, zeroHeight - collumnHeight, collumnWidth, collumnHeight);\n\n        ctx.fillStyle = '#238823';\n        ctx.fill(collumnOne);\n\n        const collumnTwo = new Path2D('2d');\n\n        ctx.fillStyle = 'dodgerblue';\n        ctx.fill(collumnTwo);\n\n        if (data[key].earnings < 0) {\n            collumnHeight = (data[key].earnings / data[key].revenue) * collumnHeight;\n            collumnTwo.rect(padding + textWidth + margin, zeroHeight + 2 - collumnHeight, collumnWidth, collumnHeight);\n        } else {\n            collumnHeight = (data[key].earnings / data[key].revenue) * collumnHeight;\n            collumnTwo.rect(padding + textWidth + margin, zeroHeight - collumnHeight, collumnWidth, collumnHeight);\n        }\n\n        ctx.fillStyle = 'dodgerblue';\n        ctx.fill(collumnTwo);\n\n        ctx.font = `9pt Roboto`;\n        ctx.fillStyle = 'rgb(102, 102, 102)';\n\n        ctx.fillText(data[key].date, padding + textWidth + (collumnWidth + margin) / 2 - ctx.measureText(data[key].date).width / 2, canvasHeight - 8);\n\n        padding += collumnWidth + inBetween;\n    }\n\n};\n\nconst setupCanvas = (canvas) => {\n    let dpr = window.devicePixelRatio || 1;\n    let rect = canvas.getBoundingClientRect();\n    let rectParent = canvas.parentElement.getBoundingClientRect();\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    canvas.style.width = rectParent.width + 'px';\n    canvas.style.height = rectParent.height + 'px';\n    let ctx = canvas.getContext('2d');\n    ctx.scale(dpr, dpr);\n    return ctx;\n}\n\nCollumnChart.propTypes = {\n    data: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    scaleData: PropTypes.func,\n    double: PropTypes.bool,\n    horizontal: PropTypes.bool\n}\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Pie chart.\n * @param {object} props - Props.\n * @param {number} props.canvasWidth - Canvas width.\n * @param {number} props.canvasHeight - Canvas height.\n * @param {number[]} props.data - Chart data.\n * @returns {Element} PieChart component.\n */\nexport const PieChart = ({ canvasWidth, canvasHeight, data }) => {\n\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const context = setupCanvas(canvas);\n\n        chart(context, canvasHeight, canvasWidth, data);\n    }, [chart])\n\n    return (\n        <canvas\n            style={{width:canvasWidth, height:canvasHeight}}\n            ref={canvasRef} />\n    )\n}\n\nconst chart = (ctx, canvasHeight, canvasWidth, data) => {\n\n    const x = canvasWidth / 2;\n    const y = canvasHeight / 2;\n\n    let color;\n    const colors = [\n        '#003f5c',\n        '#d45087',\n        '#2f4b7c',\n        '#39CCCC',\n        '#665191',\n        '#a05195',\n        '#f95d6a',\n        '#ff7c43',\n        '#ffa600',\n        '#3D9970',\n        '#001F3F',\n        '#85144B'\n    ];\n\n    let startAngle;\n    let endAngle;\n\n    for (let i = 0; i < data.length; i++) {\n        color = colors[i];\n        startAngle = calculateStart(data, i);\n        endAngle = calculateEnd(data, i);\n\n        ctx.beginPath();\n        ctx.fillStyle = color;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, y - 70, startAngle, endAngle);\n        ctx.fill();\n    }\n};\n\nconst calculateStart = (data, idx) => {\n    if (idx === 0) return 0;\n    return calculateEnd(data, idx - 1);\n};\n\nconst calculateEnd = (data, idx) => {\n    return degreeToRadians(calculateEndAngle(data, idx));\n};\n\nconst  calculateEndAngle = (data, idx) => {\n    let angle = parseFloat(data[idx][1]) / 100 * 360;\n    let inc = (idx === 0) ? 0 : calculateEndAngle(data, idx - 1);\n\n    return angle + inc;\n}\n\nconst degreeToRadians = (angle) => {\n    return angle * Math.PI / 180;\n}\n\nconst setupCanvas = (canvas) => {\n    let dpr = window.devicePixelRatio || 1;\n    let rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    let ctx = canvas.getContext('2d');\n    ctx.scale(dpr, dpr);\n    return ctx;\n}\n\nPieChart.propTypes = {\n    canvasHeight: PropTypes.number,\n    canvasWidth: PropTypes.number,\n    data: PropTypes.array,\n}","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './charts.module.css';\n\n/**\n * Line chart.\n * @param {object} props - Props.\n * @param {number[]} props.data - Chart data.\n * @returns {Element} LineChart component.\n */\nexport const LineChart = ({ data }) => {\n\n    let [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    const func = () => {\n        setWindowWidth(window.innerWidth);\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', func);\n        return () => {\n            window.removeEventListener('resize', func);\n        }\n    }, [windowWidth]);\n\n    const canvasRef = useRef(null);\n\n    let lineChart;\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        let canvasWidth = rect.width;\n        let canvasHeight = rect.height;\n        const context = setupCanvas(canvas);\n        lineChart = chart(context, canvasHeight, canvasWidth, data);\n    }, [lineChart, windowWidth])\n\n\n    return (\n        <canvas\n            className={styles.canvas}\n            ref={canvasRef} />\n    );\n}\n\nconst chart = (ctx, canvasHeight, canvasWidth, data) => {\n\n    let lineY = 8;\n\n    for (let i = 0; i < 6; i++) {\n        const line = new Path2D('2d');\n\n        line.rect(0, lineY, canvasWidth, 1);\n\n        ctx.fillStyle = 'lightgray';\n        ctx.fill(line);\n\n        lineY += canvasHeight / 6;\n    }\n\n    let highestPoint = 0;\n    let lowestPoint = data[0];\n    for (let i = 0; i < data.length; i++) {\n        if (data[i] > highestPoint) highestPoint = data[i];\n        if (data[i] < lowestPoint) lowestPoint = data[i];\n    }\n\n    ctx.lineWidth = 1;\n    if (data[0] > data[data.length - 1]) {\n        ctx.strokeStyle = '#D2222D';\n    } else ctx.strokeStyle = '#007000';\n\n    let t = 3;\n    let price = data[0];\n    let oldPrice;\n\n    for (let i = 0; i < data.length; i++) {\n        if (data[i]) {\n\n            oldPrice = price;\n            price = data[i];\n\n            ctx.beginPath();\n            ctx.moveTo(t, (canvasHeight - 35) - (oldPrice - lowestPoint) / (highestPoint - lowestPoint) * (canvasHeight - 30) + 16);\n            if (canvasWidth < 450) {\n                ctx.lineTo(t + 1.1, (canvasHeight - 35) - (price - lowestPoint) / (highestPoint - lowestPoint) * (canvasHeight - 30) + 16);\n            } else {\n                ctx.lineTo(t + 1.7, (canvasHeight - 35) - (price - lowestPoint) / (highestPoint - lowestPoint) * (canvasHeight - 30) + 16);\n            }\n            ctx.stroke();\n            if (canvasWidth < 450) {\n                t += 1.1;\n            } else {\n                t += 1.7;\n            }\n\n        }\n    }\n\n    ctx.closePath();\n\n    const currentPriceCollumnHeight = (data[data.length - 1] - lowestPoint) / (highestPoint - lowestPoint) * (canvasHeight - 16) - 15;\n\n    ctx.font = `9pt Roboto`;\n    ctx.fillStyle = 'black';\n    ctx.fillText(Math.round(+data[data.length - 1] * 100) / 100, t + 12, canvasHeight - currentPriceCollumnHeight - 16);\n\n    ctx.beginPath();\n    if (data[0] > data[data.length - 1]) {\n        ctx.strokeStyle = '#D2222D';\n    } else ctx.strokeStyle = '#007000';\n    ctx.arc(t + 3, canvasHeight - currentPriceCollumnHeight - 20, 3, 0, 2 * Math.PI);\n    ctx.stroke();\n\n};\n\nconst setupCanvas = (canvas) => {\n    let dpr = window.devicePixelRatio || 1;\n    let rect = canvas.getBoundingClientRect();\n    let rectParent = canvas.parentElement.getBoundingClientRect();\n    canvas.width = rect.width * dpr;\n    canvas.height = (rect.height) * dpr;\n    canvas.style.width = rectParent.width - 48 + 'px';\n    canvas.style.height = rectParent.height - 24 + 'px';\n    let ctx = canvas.getContext('2d');\n    ctx.scale(dpr, dpr);\n    return ctx;\n}\n\nLineChart.propTypes = {\n    canvasHeight: PropTypes.number,\n    canvasWidth: PropTypes.number,\n    data: PropTypes.array,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './input.module.css';\n\n/**\n * Input.\n * @param {object} props - Props.\n * @param {Function} props.onChange - Event on change of input value.\n * @param {Function} props.onFocus - Event on focused input.\n * @param {Function} props.onBlur - Event on out of focus input.\n * @param {(string|number)} props.width - Width of an input.\n * @param {(string|number)} props.value - Value of an input.\n * @param {string} props.label - Label of an input.\n * @param {boolean} props.error - True or false for error.\n * @param {string} props.errorMessage - Error message when error is true.\n * @param {boolean} props.focus - True or false for autofocus on input.\n * @returns {Element} Input component.\n */\nexport const Input = ({ label, value, width, onChange, onFocus, onBlur, error, errorMessage, focus }) => {\n\n    let inputClassName = `${styles.field} `;\n    let labelClassName = `${styles.label} `;\n\n    if (error) {\n        inputClassName += styles.error;\n        labelClassName += styles.error;\n    }\n\n    const errorNotification = error ? <p className={styles.messsage}>{errorMessage}</p> : <div className={styles.empty}></div>;\n\n    return (\n        <div className={styles.input}>\n            <input\n                type='text'\n                className={inputClassName}\n                required\n                autoFocus={focus}\n                value={value}\n                style={{ width: `${width}px` }}\n                onChange={onChange}\n                onFocus={onFocus}\n                onBlur={onBlur} />\n            <label className={labelClassName}>{label}</label>\n            {errorNotification}\n        </div>\n    );\n};\n\nInput.propTypes = {\n    error: PropTypes.bool,\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    width: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    errorMessage: PropTypes.string,\n    focus: PropTypes.bool\n}","import React from 'react';\nimport { Button } from '../';\nimport PropTypes from 'prop-types';\nimport styles from './popup.module.css';\n\n/**\n * Popup.\n * @param {object} props - Props.\n * @param {Function} props.onClose - Event for closing a popup by click.\n * @param {Function} props.onKeyPress - Event on key press.\n * @param {Element} props.head - Header component of a popup.\n * @param {Element} props.inside - Body component of a popup.\n * @returns {Element} Popup component.\n */\nexport const Popup = ({ onClose, head, inside, onKeyPress }) => {\n\n    document.body.style.overflow = 'hidden';\n\n    const close = () => {\n        document.body.style.overflow = 'overlay';\n        onClose();\n    };\n\n    return (\n        <div\n            className={styles.popup}\n            onClick={close}\n            onKeyPress={onKeyPress}>\n            <div className={styles.content}>\n            </div>\n            <div\n                className={styles.bg}\n                onClick={e => e.stopPropagation()}>\n                {head}\n                <span className={styles.close}>\n                    <Button\n                        navigation\n                        onClick={close}\n                        icon={'fas fa-times fa-2x'} />\n                </span>\n                <span className={styles.inside}>\n                    {inside}\n                </span>\n            </div>\n        </div>\n\n    );\n}\n\nPopup.propTypes = {\n    onClose: PropTypes.func,\n    onKeyPress: PropTypes.func,\n    head: PropTypes.element,\n    inside: PropTypes.element,\n}","import React from 'react';\nimport './spinner.css';\n\n/**\n * Spinner.\n * @returns {Element} Spinner component.\n */\nexport const Spinner = () => {\n    return (\n        <div className=\"loadingio-spinner-rolling-p982p7fse9\"><div className=\"ldio-7vtcznexcxe\">\n            <div></div>\n        </div></div>\n    )\n}","/**\n * Function addStock (when a new stock has been added to a portfolio).\n * @param {string} stock - Stock data from API.\n * @param {string} ticker - Added stock's ticker.\n * @param {string} avarageCost - Added stock's avarage cost per share.\n * @param {string} shares - Added stock's shares.\n * @returns {object} Redux action with stock object.\n */\nconst addStock = (stock, ticker, avarageCost, shares) => {\n    return {\n        type: 'ADD_STOCK',\n        stock: stock,\n        ticker: ticker,\n        avarageCost: avarageCost,\n        shares: shares\n    };\n};\n\n/**\n * Function editStock (when a stock has been edited).\n * @param {object} editedStock - Edited stock with previous data from API and updated information on amount of shares and cost per share.\n * @returns {object} Redux action with stock object.\n */\nconst editStock = (editedStock) => {\n    return {\n        type: 'EDIT_STOCK',\n        stock: editedStock\n    };\n};\n\n/**\n * Function deleteStock (when a stock has been deleted to a portfolio).\n * @param {object} deletedStockTicker - Ticker of a stock that has been deleted.\n * @returns {object} Redux action with stock ticker.\n */\nconst deleteStock = (deletedStockTicker) => {\n    return {\n        type: 'DELETE_STOCK',\n        ticker: deletedStockTicker\n    };\n};\n\n/**\n * Function addDividend (when recieved dividend have been added or changed).\n * @param {number} year - Year when dividend has been recieved.\n * @param {string} month - Month when dividend has been recieved.\n * @param {string} paid - Dividends recieved at that period.\n * @returns {object} Redux action with year, month and dividends paid.\n */\nconst addDividend = (year, month, paid) => {\n    return {\n        type: 'ADD_DIVIDEND',\n        year: year,\n        month: month,\n        paid: paid\n    };\n};\n\n/**\n * Function addYear (when new year have been added).\n * @param {object} year - New year of dividends payments.\n * @returns {object} Redux action with year.\n */\nconst addYear = (year) => {\n    return {\n        type: 'ADD_YEAR',\n        year: year,\n    }\n}\n\nconst stockRequested = () => {\n    return {\n        type: 'FETCH_STOCK_REQUEST'\n    };\n};\n\nconst stockLoaded = (stock) => {\n    return {\n        type: 'FETCH_STOCK_SUCCESS',\n        stock: stock\n    };\n};\n\nconst stockError = (error) => {\n    return {\n        type: 'FETCH_STOCK_FAILURE',\n        error: error\n    };\n};\n\nconst fetchStock = (stockService) => (ticker) => async (dispatch) => {\n        dispatch(stockRequested());\n        return await stockService.getStock(ticker).then(\n            (stock) => dispatch(stockLoaded(stock)),\n            (error) => dispatch(stockError(error)),\n        );\n};\n\nconst clearState = () => {\n    return {\n        type: 'CLEAR_STATE'\n    };\n};\n\nconst load = () => {\n    return {\n        type: 'LOADING'\n    };\n};\n\nconst ready = () => (dispatch) => {\n    setTimeout(() => dispatch({\n        type: 'READY'\n    }), 500);\n};\n\nexport {\n    addStock,\n    editStock,\n    deleteStock,\n    addDividend,\n    addYear,\n    fetchStock,\n    load,\n    ready,\n    clearState\n};","import React from 'react';\n\nconst {\n    Provider: StockServiceProvider,\n    Consumer: StockServiceConsumer\n} = React.createContext();\n\nexport {\n    StockServiceConsumer,\n    StockServiceProvider\n}","import React from 'react';\nimport { StockServiceConsumer } from '../../stock-service-context/stock-service-context';\n\n/**\n * WithStocksService.\n * @returns {Element} Element wrapped into stock service.\n */\nexport const withStockService = () => (Wrapped) => {\n\n    const Service = (props) => {  \n        return (\n            <StockServiceConsumer>\n                {\n                    (stockService) => {\n                        return <Wrapped {...props} stockService={stockService} />\n                    }\n                }\n            </StockServiceConsumer>\n        );\n    }\n\n    return Service;\n};","/**\n * Function compose.\n * @param {...Function} func - All the functions for callback.\n * @param {Element} comp - React component.\n * @returns {Element} React component inside callback functions .\n */\n\nexport const compose = (...funcs) => (comp) => {\n    return funcs.reduceRight(\n        (wrapped, f) => f(wrapped), comp);\n};","import React, { useState, Fragment } from 'react';\nimport { Popup, Input, Button, Spinner } from '../../../../ui';\nimport { addStock, clearState, fetchStock } from '../../../../actions';\nimport { withStockService } from '../../../hoc';\nimport { connect } from 'react-redux';\nimport { compose } from '../../../../utils';\nimport PropTypes from 'prop-types';\nimport styles from './popup.module.css';\nimport { bindActionCreators } from 'redux';\nimport { stockRequestThrottle } from '../../../../utils/stock-request-throttle';\n\n/**\n * Add new stock popup.\n * @param {object} props - Props.\n * @param {Function} props.onClose - Callback function for closing popup.\n * @param {Function} props.addStock - Redux action for adding a new stock.\n * @param {object} props.newStock - New stock data from API stock service from redux state.\n * @param {Function} props.fetchStock - Redux action for requesting and reciving result from API stock service.\n * @param {Function} props.clearState - Redux action for clearing new stock data from redux state.\n * @returns {Element} StockPopup component.\n */\nconst ComponentAddStockPopup = ({ onClose, addStock, newStock, loading, error, fetchStock, clearState }) => {\n    let change;\n\n    const close = () => {\n        setErrorPrice(false);\n        setErrorShares(false);\n        onClose(change);\n    }\n\n    const [tickerValue, setTickerValue] = useState('');\n    const [priceValue, setPriceValue] = useState('');\n    const [sharesValue, setSharesValue] = useState('');\n\n    const rgxNum = /^[0-9]*\\.?[0-9]*$/;\n    const rgxStr = /^[A-Za-z]*$/;\n\n    let disabled = true;\n\n    const onSubmit = async () => {\n        let finalTicker = tickerValue;\n\n        let rgxNum = /^[0-9]*\\.?[0-9]*$/;\n        let rgxStr = /^[A-Za-z]*$/;\n        \n        if (!newStock) {\n            setErrorTicker(true);\n        }\n\n        if (tickerValue === ''\n            || !tickerValue.match(rgxStr)\n            || priceValue === ''\n            || sharesValue === ''\n            || +sharesValue === 0\n            || !sharesValue.match(rgxNum)\n            || !newStock\n            || errorTicker\n            || errorShares\n            || errorPrice\n        ) {\n            disabled = true;\n            return;\n        }\n        \n        if (newStock && finalTicker.toUpperCase() === newStock.symbol) {\n            let ticker = tickerValue;\n            let avarageCost = Math.round(priceValue * 100) / 100;\n            let shares = Math.round(sharesValue * 100) / 100;\n            addStock(newStock, ticker, avarageCost, shares);\n            change = true;\n            clearState();\n        } else {\n            await fetchStock(finalTicker.toUpperCase());\n            let ticker = tickerValue;\n            let avarageCost = Math.round(priceValue * 100) / 100;\n            let shares = Math.round(sharesValue * 100) / 100;\n            addStock(newStock, ticker, avarageCost, shares);\n            change = true;\n            clearState();\n        }\n\n        close();\n    }; console.log()\n\n    const [errorTicker, setErrorTicker] = useState(false);\n    const [errorPrice, setErrorPrice] = useState(false);\n    const [errorShares, setErrorShares] = useState(false);\n\n    let requestStock = stockRequestThrottle(fetchStock, 1000);\n    \n    const onBlurTicker = () => {\n        if (tickerValue === '' || !tickerValue.match(rgxStr) || error) setErrorTicker(true);\n        requestStock(tickerValue);\n    };\n    const onFocusTicker = () => {\n        if (errorTicker || newStock) setErrorTicker(false);\n    };\n    const onBlurPrice = () => {\n        if (!priceValue.toString().match(rgxNum) || priceValue === '') setErrorPrice(true);\n    };\n    const onFocusPrice = () => {\n        if (errorPrice) setErrorPrice(false);\n    };\n    const onBlurShares = () => {\n        if (!sharesValue.toString().match(rgxNum) || sharesValue === '') setErrorShares(true);\n    };\n    const onFocusShares = () => {\n        if (errorShares) setErrorShares(false);\n    };\n    \n    if (!(tickerValue === '')\n        && !(priceValue === '')\n        && !(sharesValue === '')\n        && !(+sharesValue === 0)\n        && tickerValue.match(rgxStr)\n        && priceValue.toString().match(rgxNum)\n        && sharesValue.toString().match(rgxNum)\n        && newStock\n        && !errorTicker\n        && !errorShares\n        && !errorPrice\n    ) {\n        disabled = false;\n    } else {\n        disabled = true;\n    }\n    \n    const head = (\n        <div className={styles.headSmall}>\n            <p className={styles.company}>New Holding</p>\n            <br />\n            <p className={styles.ticker}>Type ticker, avarage price and shares bought</p>\n            <div className={styles.barSmall}></div>\n        </div>\n    );\n\n    const spinner = loading ? <div className={styles.spinner}><Spinner /></div> : null;\n    const errorMessage = error ? \"We coudn't find the stock\" : 'Invalid format';\n\n    const inside = (\n        <Fragment>\n            {spinner}\n            {errorMessage}\n            <div className={styles.insideSmall}>\n                <Input\n                    label={'Ticker'}\n                    width={'242'}\n                    onChange={e => {\n                        setTickerValue(e.target.value);\n                    }}\n                    onBlur={onBlurTicker}\n                    onFocus={onFocusTicker}\n                    error={errorTicker}\n                    errorMessage={errorMessage} />\n                <Input\n                    label={'Price'}\n                    width={'242'}\n                    onChange={e => {\n                        setPriceValue(e.target.value);\n                    }}\n                    onBlur={onBlurPrice}\n                    onFocus={onFocusPrice}\n                    error={errorPrice}\n                    errorMessage={'Invalid format'} />\n                <Input\n                    label={'Shares'}\n                    width={'242'}\n                    onChange={e => {\n                        setSharesValue(e.target.value);\n                    }}\n                    onBlur={onBlurShares}\n                    onFocus={onFocusShares}\n                    error={errorShares}\n                    errorMessage={'Invalid format'} />\n            </div>\n            <div className={styles.submit}>\n                <Button\n                    onClick={onSubmit}\n                    width={'258'}\n                    disabled={disabled} >add</Button>\n            </div>\n        </Fragment>\n    );\n\n    const onKeyPress = (e) => {\n        if (e.code === 'Enter') onSubmit();\n    }\n\n    return (\n        <Popup onClose={close} head={head} inside={inside} onKeyPress={onKeyPress} />\n    );\n}\n\nconst mapStateToProps = ({ newStock }) => {\n    return {\n        newStock: newStock.stock,\n        loading: newStock.loading,\n        error: newStock.error\n    };\n};\n\nconst mapDispatchToProps = (dispatch, { stockService }) => {\n    return bindActionCreators({\n        fetchStock: fetchStock(stockService),\n        addStock: addStock,\n        clearState: clearState\n    }, dispatch);\n};\n\nexport const AddStockPopup = (\n    compose(\n        withStockService(),\n        connect(mapStateToProps, mapDispatchToProps)\n    )(ComponentAddStockPopup)\n);\n\nComponentAddStockPopup.propTypes = {\n    onClose: PropTypes.func,\n    addStock: PropTypes.func,\n    fetchStock: PropTypes.func,\n    clearState: PropTypes.func,\n    newStock: PropTypes.object\n}","export const stockRequestThrottle = (func, ms) => {\n    let stockRequested = false,\n        requestFunction,\n        stockInfo;\n\n    function stockRequestWrapper() {\n\n        if (stockRequested) {\n            requestFunction = arguments;\n            stockInfo = this;\n            return;\n        }\n\n        func.apply(this, arguments);\n        \n        stockRequested = true;\n\n        setTimeout(function () {\n            stockRequested = false;\n            if (requestFunction) {\n                stockRequestWrapper.apply(stockInfo, requestFunction);\n                requestFunction = stockInfo = null;\n            }\n        }, ms);\n    }\n\n    return stockRequestWrapper;\n}","import React, { useState } from 'react';\nimport { Popup, Input, Button } from '../../../../ui';\nimport { editStock } from '../../../../actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './popup.module.css';\n\n/**\n * Add new stock popup.\n * @param {object} props - Props.\n * @param {Function} props.onClose - Callback function for closing popup.\n * @param {Function} props.editStock - Redux action for additing new stock.\n * @param {object} props.stock - Stock data.\n * @returns {Element} StockPopup component.\n */\nconst ComponentEditStockPopup = ({ onClose, stock, editStock }) => {\n\n    const close = () => {\n        setErrorPrice(false);\n        setErrorShares(false);\n        setPriceValue(stock.avarageCost);\n        setSharesValue(stock.shares);\n        onClose();\n    }\n\n    const rgx = /^[0-9]*\\.?[0-9]*$/;\n\n    let disabled = true;\n\n    const [priceValue, setPriceValue] = useState(stock.avarageCost);\n    const [sharesValue, setSharesValue] = useState(stock.shares);\n\n    const onSubmit = () => {\n\n        if (priceValue === ''\n            || sharesValue === ''\n            || errorShares\n            || errorPrice\n            || +sharesValue === 0\n            || !sharesValue.toString().match(rgx)\n        ) {\n            disabled = true;\n            return;\n        }\n\n        stock.avarageCost = Math.round(priceValue * 100) / 100;\n        stock.shares = Math.round(sharesValue * 100) / 100;\n\n        editStock(stock);\n\n        close();\n    };\n\n    const onKeyPress = (e) => {\n        if (e.code === 'Enter') onSubmit();\n    };\n\n    const head = (\n        <div className={styles.headSmall}>\n            <p className={styles.company}>{stock.longName}</p>\n            <br />\n            <p className={styles.ticker}>{stock.symbol}</p>\n            <div className={styles.barSmall}></div>\n        </div>\n    );\n\n    const [errorPrice, setErrorPrice] = useState(false);\n    const [errorShares, setErrorShares] = useState(false);\n\n    if (!(priceValue === '')\n        && priceValue.toString().match(rgx)\n        && sharesValue.toString().match(rgx)\n        && !(sharesValue === '')\n        && !(+sharesValue === 0)\n        && !errorShares\n        && !errorPrice\n    ) {\n        disabled = false;\n    } else {\n        disabled = true;\n    }\n\n    const onBlurPrice = () => {\n        if (!priceValue.toString().match(rgx) || priceValue === '') setErrorPrice(true);\n    };\n    const onFocusPrice = (e) => {\n        e.target.select();\n        if (errorPrice) setErrorPrice(false);\n    };\n    const onBlurShares = () => {\n        if (!sharesValue.toString().match(rgx) || sharesValue === '') setErrorShares(true);\n    };\n    const onFocusShares = (e) => {\n        e.target.select();\n        if (errorShares) setErrorShares(false);\n    };\n\n    const inside = (\n        <div>\n            <div className={styles.insideSmall}>\n                <Input\n                    label={'Price'}\n                    value={priceValue}\n                    width={'245'}\n                    onChange={e => {\n                        setPriceValue(e.target.value);\n                    }}\n                    onBlur={onBlurPrice}\n                    onFocus={onFocusPrice}\n                    error={errorPrice}\n                    errorMessage={'Invalid format'} />\n                <Input\n                    label={'Shares'}\n                    value={sharesValue}\n                    width={'245'}\n                    onChange={e => {\n                        setSharesValue(e.target.value);\n                    }}\n                    onBlur={onBlurShares}\n                    onFocus={onFocusShares}\n                    error={errorShares}\n                    errorMessage={'Invalid format'} />\n            </div>\n            <div className={styles.submit}>\n                <Button\n                    onClick={onSubmit}\n                    width={'257'}\n                    disabled={disabled} >submit</Button>\n            </div>\n        </div>\n    );\n\n    return (\n        <Popup onClose={close} head={head} inside={inside} onKeyPress={onKeyPress} />\n    );\n}\n\nconst mapDispatchToProps = { editStock }\n\nexport const EditStockPopup = connect(null, mapDispatchToProps)(ComponentEditStockPopup);\n\nComponentEditStockPopup.propTypes = {\n    onClose: PropTypes.func,\n    editStock: PropTypes.func,\n    stock: PropTypes.object\n}\n\n\n\n\n\n\n\n","import React, { useState } from 'react';\nimport { Button } from '../../../../../ui/';\nimport { connect } from 'react-redux';\nimport { deleteStock } from '../../../../../actions';\nimport { compose } from '../../../../../utils';\nimport PropTypes from 'prop-types';\nimport { EditStockPopup } from '../../popups/edit-stock-popup';\nimport styles from './holdings.module.css';\n\n/**\n * Stock's info page inside stock popup.\n * @param {object} props - Props.\n * @param {Function} props.deleteStock - Redux action for deleting stock.\n * @param {Function} props.onDeleteStock - Callback function for closing stock popup.\n * @param {object} props.stock - Stock data.\n * @returns {Element} StockInfo component.\n */\nconst ComponentHoldings = ({ stock, deleteStock, onDeleteStock }) => {\n\n    const onClose = () => {\n        setPopupOn(false);\n    }\n\n    const onDelete = () => {\n        deleteStock(stock.symbol);\n        document.body.style.overflow = 'overlay';\n        onDeleteStock();\n    }\n\n    const [popupOn, setPopupOn] = useState(false);\n    const popup = popupOn ? <EditStockPopup onClose={onClose} stock={stock} /> : null;\n\n    const onClick = () => {\n        setPopupOn(true);\n    }\n\n    const bg = stock.currentPrice - stock.avarageCost >= 0 ? 'var(--color-gain)' : 'var(--color-error)';\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.holdings} style={{background: bg}}>\n                {popup}\n                <h1>Your<br />Holdings</h1>\n                <span className={styles.data}><p className={styles.label}>Avarage Cost</p><p className={styles.number}>${stock.avarageCost}</p></span>\n                <span className={styles.data}><p className={styles.label}>Shares</p><p className={styles.number}>{stock.shares}</p></span>\n                <span className={styles.data}><p className={styles.label}>Total Gains</p><p className={styles.number}>{Math.round(((stock.currentPrice - stock.avarageCost) * stock.shares) * 100) / 100} ({Math.round(((stock.currentPrice - stock.avarageCost) / stock.avarageCost) * 100 * 100) / 100}%)</p></span>\n            </div>\n            <div className={styles.buttons}>\n                <Button onClick={onClick}>Edit</Button>\n                <Button color={'var(--color-error)'} onClick={onDelete}>delete</Button>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = { deleteStock }\n\nexport const Holdings = (\n    compose(\n        connect(null, mapDispatchToProps)\n    )(ComponentHoldings)\n);\n\nComponentHoldings.propTypes = {\n    onDeleteStock: PropTypes.func,\n    deleteStock: PropTypes.func,\n    stock: PropTypes.object\n}\n","import React from 'react';\nimport { CollumnChart } from '../../../../../ui';\nimport PropTypes from 'prop-types';\nimport styles from './sales-chart.module.css';\n\n/**\n * Sales chart.\n * @param {object} props - Props.\n * @param {object} props.stock - Stock data.\n * @returns {Element} SalesChart component.\n */\nexport const SalesChart = ({ stock }) => {\n\n    const { yearly } = stock;\n\n    let years = 0;\n    for (let key in yearly) {\n        if (yearly[key]) years++;\n    }\n\n    if (years < 1 || !yearly) {\n        return (\n            <p>No financial data yet</p>\n        )\n    }\n\n    return (\n        <div className={styles.container}>\n            <p className={styles.group}>Financials</p>\n            <span className={styles.label}>\n                <span className={styles.line}><div className={styles.revenue} /><p>Revenue</p></span>\n                <span className={styles.line}><div className={styles.earnings} /><p>Earnings</p></span>\n            </span>\n            <div className={styles.chart}>\n                <CollumnChart\n                    double\n                    scaleData={scaleData}\n                    data={yearly} />\n            </div>\n        </div>\n    )\n};\n\nconst scaleData = (data, idx, low) => {\n    let scales = [0];\n    for (let i = Math.ceil(data[idx].revenue); ; i++) {\n        if (i > 9999) {\n            if (i % 5000 === 0) {\n                for (let j = 1; j < 8; j++) {\n                    scales.push(Math.round(i / 8 * j));\n                }\n                scales.push(i);\n                break;\n            }\n        } else {\n            if (i % 10 === 0) {\n                for (let j = 1; j < 8; j++) {\n                    scales.push(Math.round(i / 8 * j));\n                }\n                scales.push(i);\n                break;\n            }\n        }\n    }\n\n    const scalesCopy = [...scales];\n\n    for (let i = 0; i < scalesCopy.length; i++) {\n        if (scalesCopy[i] < -low && scales[i] != 0) {\n            scales.unshift(-scalesCopy[i]);\n        }\n    }\n\n    return scales;\n};\n\nSalesChart.propTypes = {\n    stock: PropTypes.object\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Holdings } from './holdings';\nimport styles from './stock-info.module.css';\nimport { SalesChart } from './sales-chart/sales-chart';\nimport { LineChart } from '../../../../ui';\n\n/**\n * Stock's info page inside stock popup.\n * @param {object} props - Props.\n * @param {Function} props.onDeleteStock - Callback function for closing stock popup.\n * @param {object} props.stock - Stock data.\n * @returns {Element} StockInfo component.\n */\nexport const StockInfo = ({ stock, onDeleteStock }) => {\n\n    return (\n        <div className={styles.container}>\n            <Holdings stock={stock} onDeleteStock={onDeleteStock} />\n            <div>\n                <div className={styles.chart}>\n                    <LineChart data={getData(stock.chartData)} />\n                </div>\n            </div>\n            <div className={styles.valuation}>\n                <div>\n                    <p className={styles.group}>Valutaion</p>\n                    <span className={styles.line}><p className={styles.label}>Market Cap</p><p className={styles.number}>{stock.marketCap || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Enterprise Value</p><p className={styles.number}>{stock.enterpriseValue || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Price/Book</p><p className={styles.number}>{stock.priceToBook || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Price/Sales</p><p className={styles.number}>{stock.priceToSalesTrailing12Months || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Price/Earnings</p><p className={styles.number}>{stock.trailingPE || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Forward Price/Earnings</p><p className={styles.number}>{stock.forwardPE || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Price/Free Cash Flow</p><p className={styles.number}>{stock.priceToFreeCashFlow || 'N/A'}</p></span>\n                </div>\n                <div>\n                    <p className={styles.group}>Dividends</p>\n                    <span className={styles.line}><p className={styles.label}>Dividend Rate</p><p className={styles.number}>{(stock.dividendRate ? ('$' + stock.dividendRate) : null) || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Yield</p><p className={styles.number}>{stock.dividendYield || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Payout Ration</p><p className={styles.number}>{stock.payoutRatio || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Free Cash Flow</p><p className={styles.number}>{(stock.freeCashFlowPerStock ? ('$' + stock.freeCashFlowPerStock) : null) || 'N/A'}</p></span>\n                </div>\n                <div>\n                    <p className={styles.group}>Balance Sheet</p>\n                    <span className={styles.line}><p className={styles.label}>Curent Assets</p><p className={styles.number}>{stock.marketCap || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Total Liabilities</p><p className={styles.number}>{stock.enterpriseValue || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Total Cash</p><p className={styles.number}>{stock.totalCash || 'N/A'}</p></span>\n                    <span className={styles.line}><p className={styles.label}>Total Debt</p><p className={styles.number}>{stock.totalDebt}</p></span>\n                </div>\n                <div>\n                    <p className={styles.group}>Company Profile</p>\n                    <span className={styles.about}><p className={styles.label}>Country</p><p className={styles.number}>{stock.country || 'N/A'}</p></span>\n                    <span className={styles.about}><p className={styles.label}>Sector</p><p className={styles.number}>{stock.sector || 'N/A'}</p></span>\n                    <p className={styles.description}>{stock.longBusinessSummery}</p>\n                </div>\n            </div>\n            <SalesChart stock={stock} />\n        </div>\n    );\n}\n\nconst getData = (data) => {\n    let dataArr = [];\n    for (let key in data) {\n        dataArr.unshift(data[key].close);\n    }\n    return dataArr;\n}\n\nStockInfo.propTypes = {\n    onDeleteStock: PropTypes.func,\n    deleteStock: PropTypes.func,\n    stock: PropTypes.object\n}\n\n\n","import React from 'react';\nimport { Popup } from '../../../../ui';\nimport { StockInfo } from '../stock-info';\nimport { connect } from 'react-redux';\nimport { compose } from '../../../../utils';\nimport PropTypes from 'prop-types';\nimport styles from './popup.module.css';\n\n/**\n * Stocks info popup.\n * @param {object} props - Props.\n * @param {Function} props.onClose - Callback function for closing popup.\n * @param {string} props.ticker - Stock list from redux state.\n * @param {string[]} props.stocks - Stock list from redux state.\n * @returns {Element} StockPopup component.\n */\nconst ComponentStockPopup = ({ onClose, ticker, stocks }) => {\n\n    const stock = stocks.find((item) => item.symbol === ticker)\n\n    const head = (\n        <div className={styles.head}>\n            <p className={styles.company}>{stock.longName}</p>\n            <br />\n            <p className={styles.ticker}>{stock.symbol}</p>\n            <div className={styles.bar}></div>\n        </div>\n    );\n\n    const inside = <div className={styles.inside}><StockInfo onDeleteStock={onClose} stock={stock} /></div>;\n\n    return (\n        <Popup onClose={onClose} head={head} inside={inside} />\n    );\n}\n\nconst mapStateToProps = ({ portfolio }) => {\n    return {\n        stocks: portfolio.stocks,\n    };\n}\n\nexport const StockPopup = (\n    compose(\n        connect(mapStateToProps, null)\n    )(ComponentStockPopup)\n);\n\nComponentStockPopup.propTypes = {\n    onClose: PropTypes.func,\n    ticker: PropTypes.string,\n    stocks: PropTypes.array\n}","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { StockPopup } from '../../components/pages/stocks/popups';\nimport styles from './stock-miniature.module.css';\n\n/**\n * Stock miniature.\n * @param {object} props - Props.\n * @param {number} props.gain - Positive number colors background in green, negative - in red.\n * @param {string} props.ticker - Stock's ticker.\n * @param {string} props.company - Stock's full company name.\n * @param {(string|number)} props.number - Absolute number.\n * @param {(string|number)} props.percent - Percentage.\n * @returns {Element} Stock miniature component.\n */\nexport const StockMiniature = ({ gain, ticker, company, number, percent }) => {\n\n    let className = `${styles.container} `;\n\n    if (gain > 0) className += styles.up;\n    if (gain < 0) className += styles.down;\n\n    const onClose = () => {\n        setStockPopupOn(false);\n    };\n\n    const [stockPopupOn, setStockPopupOn] = useState(false);\n    const stockPopup = stockPopupOn ? <div className={styles.popup}><StockPopup onClose={onClose} ticker={ticker} /></div> : null;\n    const onClick = () => {\n        setStockPopupOn(true);\n    }\n\n    return (\n        <Fragment>\n            {stockPopup}\n            <div className={className} onClick={onClick}>\n                <div className={styles.left}>\n                    <p className={styles.ticker}>{ticker}</p>\n                    <p className={styles.company}>{company}</p>\n                </div>\n                <div className={styles.right}>\n                    <p className={styles.percent}>{percent}</p>\n                    <p className={styles.number}>{number}</p>\n                </div >\n            </div>\n        </Fragment>\n    );\n}\n\nStockMiniature.propTypes = {\n    gain: PropTypes.number,\n    ticker: PropTypes.string,\n    company: PropTypes.string,\n    number: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    percent: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './table.module.css';\n\n/**\n * Table.\n * @param {object} props - Props.\n * @param {Function} props.onClick - Event on tr by click.\n * @param {(string|number)} props.width - Width of a table.\n * @param {string[]} props.collumns - Table head collumns.\n * @param {string[]} props.data - Table data, where one raw is an array.\n * @param {string[]} props.bottom - Table foot.\n * @param {boolean} props.onlyDesktop - No CSS changes in mobile version.\n * @returns {Element} Table component.\n */\nexport const Table = ({ onClick, width, collumns, data, bottom, onlyDesktop }) => { \n\n    const head = collumns.map((item, index) => {\n        return <div key={index} className={styles.th}>{item}</div>\n    });\n\n    let foot = null;\n\n    if (bottom) {\n        foot = bottom.map((item, index) => {\n            return <div key={index} className={styles.th}>{item}</div>\n        });\n    }\n\n    const rows = data.map((item, index) => {\n        const row = item.map((item, index) => {\n            return <div key={index} className={styles.td}>{item}</div>\n        });\n        return <div className={styles.tr} key={index} onClick={() => onClick(item)}>{row}</div>\n    });\n\n    let tableClassName = styles.table;\n    if (onlyDesktop) tableClassName = styles.tableOnlyDesktop\n\n    return (\n        <div className={tableClassName} style={{ width: `${width + 'px'}`}}>\n            <div className={styles.thead}>\n                <div className={styles.tr}>\n                    {head}\n                </div>\n            </div>\n            <div className={styles.tbody}>\n                {rows}\n            </div>\n            <div className={styles.tfoot}>\n                <div className={styles.tr}>\n                    {foot}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nTable.propTypes = {\n    onClick: PropTypes.func,\n    onlyDesktop: PropTypes.bool,\n    width: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    collumns: PropTypes.arrayOf(PropTypes.string),\n    data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]))),\n    bottom: PropTypes.arrayOf(PropTypes.string)\n}\n\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './tabs.module.css';\n\n/**\n * Tabs.\n * @param {object} props - Props.\n * @param {string[]} props.options - Tabs.\n * @param {boolean} props.small - Creates small version.\n * @returns {Element} Tabs component.\n */\nexport const Tabs = ({ options, small, opened }) => {\n\n    let className = `${styles.tab} ${styles.single} `;\n    let barClassName = `${styles.bar} `;\n\n    let activeTab = 0;\n    if (!small) {\n        activeTab = options.indexOf(opened) > -1 ? options.indexOf(opened) : 0;\n    }\n\n    const [active, setActive] = useState(activeTab);\n\n    if (small) {\n        className += `${styles.smalltab} `;\n        barClassName += `${styles.smallbar} `;\n    }\n\n    const elements = options.map((item, index) => {\n        let itemClassName = className;\n        if (index === active) {\n            itemClassName += styles.active;\n        }\n        if (small) {\n            return (\n                <Link to={`${item}`} key={index} >\n                    <div\n                        className={itemClassName}\n                        onClick={() => setActive(index)}\n                    >\n                        {item}\n                    </div>\n                </Link>\n            )\n        }\n        return (\n            <Link to={`/${item}/`} key={index} >\n                <div\n                    className={itemClassName}\n                    onClick={() => setActive(index)}\n                >\n                    {item}\n                </div>\n            </Link>\n        )\n    });\n\n    return (\n        <div className={styles.tab}>\n            {elements}\n            <span className={barClassName} style={{ left: `${active * (small ? 86 : 126)}px` }} />\n        </div>\n    );\n};\n\nTabs.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string),\n    small: PropTypes.bool\n}\n\n\n","import React from 'react';\nimport { Tabs } from '../../../ui';\nimport './menu.css';\n\n/**\n * Menu.\n * @returns {Element} Menu component.\n */\nexport const Menu = ({ opened }) => {\n    return (\n        <div className='menu'>\n            <Tabs className='m' options={['stocks', 'dividends', 'allocation']} opened={opened} />\n        </div>\n    );\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './holdings.module.css';\n\n/**\n * Holdings Allocation.\n * @param {object} props - Props.\n * @param {object[]} props.stocks - Stock list from redux state.\n * @param {string[]} props.allocationSector - Portfolio allocation by sectors rom redux state.\n * @param {string[]} props.allocationContry - Portfolio allocation by contries rom redux state.\n * @returns {Element} HoldingsAllocations component.\n */\nexport const ComponentHoldingsAllocation = ({ stocks, allocationSector, allocationCountry }) => {\n\n    const sectors = allocationSector.length > 0 ? allocationSector.length : '-';\n    const countries = allocationCountry.length > 0 ? allocationCountry.length : '-';\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.left}>\n                    <p className={styles.label}>Number of Holdings</p>\n                    <p className={styles.total}>{stocks.length}</p>\n            </div>\n            <table className={styles.right}>\n                <tbody>\n                    <tr className={styles.gains}>\n                        <td><p>Sector Exposure</p></td>\n                        <td><p className={styles.number}>{sectors}</p></td>\n                    </tr>\n                    <tr className={styles.gains}>\n                        <td><p>Geographic Exposure</p></td>\n                        <td><p className={styles.number}>{countries}</p></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ portfolio }) => {\n    return {\n        stocks: portfolio.stocks,\n        allocationSector: portfolio.allocationSector,\n        allocationCountry: portfolio.allocationCountry\n    };\n}\n\nexport const HoldingsAllocation = connect(mapStateToProps, null)(ComponentHoldingsAllocation);\n\nComponentHoldingsAllocation.propTypes = {\n    stocks: PropTypes.array,\n    allocationCountry: PropTypes.array,\n    allocationSector: PropTypes.array\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './holdings.module.css';\n\n/**\n * Holdings Dividends.\n * @param {object} props - Props.\n * @param {number} props.totalValue - Total value of a portfolio from redux state.\n * @param {number} props.totalGains - Total gains of a portfolio from redux state.\n * @param {number} props.totalDividends - Total dividends per year from redux state.\n * @returns {Element} HoldingsDividends component.\n */\nconst ComponentHoldingsDividends = ({ totalDividends, totalValue, totalGains }) => {\n    const yieldOnCost = totalDividends ? (Math.round((totalDividends / (totalValue - totalGains)) * 10000) / 100 + '%') : '-';\n    const paidPerMonth = totalDividends ? ('$' + Math.round((totalDividends / 12) * 100 )/ 100) : '-';\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.left}>\n                    <p className={styles.label}>Annual Dividend Income</p>\n                    <p className={styles.total}>${totalDividends}</p>\n            </div>\n            <table className={styles.right}>\n                <tbody>\n                    <tr className={styles.gains}>\n                        <td><p>Paid per Month</p></td>\n                        <td><p className={styles.number}>{paidPerMonth}</p></td>\n                    </tr>\n                    <tr className={styles.gains}>\n                        <td><p>Yield on Cost</p></td>\n                        <td><p className={styles.number}>{yieldOnCost}</p></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ portfolio }) => {\n    return {\n        totalDividends: portfolio.totalDividends,\n        totalValue: portfolio.totalValue,\n        totalGains: portfolio.totalGains\n    };\n}\n\nexport const HoldingsDividends = connect(mapStateToProps, null)(ComponentHoldingsDividends);\n\nComponentHoldingsDividends.propTypes = {\n    totalDividends: PropTypes.number,\n    totalValue: PropTypes.number,\n    totalGains: PropTypes.number\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './holdings.module.css';\n\n/**\n * Holdings Gains.\n * @param {object} props - Props.\n * @param {number} props.totalValue - Total value of a portfolio from redux state.\n * @param {number} props.totalGains - Total gains of a portfolio from redux state.\n * @returns {Element} HoldingsGains component.\n */\nconst ComponentHoldingsGains = ({ totalGains, totalValue }) => {\n\n    const gainTotal = totalGains ? `${totalGains > 0 ? `+${totalGains}` : totalGains} ${totalGains > 0 ? `(+${Math.round((totalGains / totalValue) * 100 * 100) / 100}%)` : `(${Math.round((totalGains / totalValue) * 100 * 100) / 100}%)`}` : '-';\n    const gainMonth = totalGains ? `${totalGains > 0 ? `+${totalGains}` : totalGains} ${totalGains > 0 ? `(+${Math.round((totalGains / totalValue) * 100 * 100) / 100}%)` : `(${Math.round((totalGains / totalValue) * 100 * 100) / 100}%)`}` : '-';\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.left}>        \n                    <p className={styles.label}>Portfolio Value</p>\n                    <p className={styles.total}>${totalValue}</p>\n            </div>\n            <table className={styles.right}>\n                <tbody>\n                    <tr className={styles.gains}>\n                        <td><p>Months Gain</p></td>\n                        <td><p className={styles.number}>{gainMonth}</p></td>\n                    </tr>\n                    <tr className={styles.gains}>\n                        <td><p>Total Gain</p></td>\n                        <td><p className={styles.number}>{gainTotal}</p></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ portfolio }) => {\n    return {\n        totalGains: portfolio.totalGains,\n        totalValue: portfolio.totalValue\n    };\n}\n\nexport const HoldingsGains = connect(mapStateToProps, null)(ComponentHoldingsGains);\n\nComponentHoldingsGains.propTypes = {\n    totalGains: PropTypes.number,\n    totalValue: PropTypes.number\n}\n\n\n","import React from 'react';\nimport { Menu } from './menu';\nimport { Route, useLocation } from 'react-router-dom';\nimport { HoldingsAllocation, HoldingsDividends, HoldingsGains } from './holdings';\nimport styles from './header.module.css';\n\n/**\n * Header.\n * @returns {Element} Header component.\n */\nexport const Header = () => {\n\n    let opened = useLocation().pathname;\n    opened = opened.substring(1, opened.length - 1);\n    \n    return (\n        <div className={styles.header}>\n            <div className={styles.name}>\n                <h1>stock<br />spreadsheet</h1>\n                <h2>track your cashflow</h2>\n            </div>\n            <Route path='/stocks/' component={HoldingsGains} />\n            <Route path='/allocation/' component={HoldingsAllocation} />\n            <Route path='/dividends/' component={HoldingsDividends} />\n            <Menu opened={opened} />\n        </div>\n    )\n}","import React from 'react';\nimport { StockMiniature } from '../../../ui';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './miniatures.module.css';\n\n/**\n * Miniatrues Allocation.\n * @param {object} props - Props.\n * @param {object[]} props.stocks - Stock list from redux state.\n * @param {number} props.totalValue - Portfolio total value from redux state.\n * @returns {Element} MiniaturesAllocation component.\n */\nexport const ComponentMiniaturesAllocation = ({ stocks, totalValue }) => {\n\n    let stocksCopy = [...stocks]\n    stocksCopy.sort((a, b) => (b.currentPrice * b.shares) - (a.currentPrice * a.shares));\n    let stock1 = stocksCopy[0];\n    let stock2 = stocksCopy[1];\n    let stock3 = stocksCopy[2];\n    let stock4 = stocksCopy[stocksCopy.length - 3];\n    let stock5 = stocksCopy[stocksCopy.length - 2];\n    let stock6 = stocksCopy[stocksCopy.length - 1];\n\n    return (\n        <div>\n            <h2>top holdings</h2>\n            <div className={styles.miniatures}>\n                <StockMiniature\n                    gain={1}\n                    ticker={stock1.symbol} company={stock1.longName}\n                    number={'$' + Math.round(stock1.currentPrice * stock1.shares * 100) / 100}\n                    percent={Math.round(((stock1.currentPrice * stock1.shares) / totalValue) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock2.symbol} company={stock2.longName}\n                    number={'$' + Math.round(stock2.currentPrice * stock2.shares * 100) / 100}\n                    percent={Math.round(((stock2.currentPrice * stock2.shares) / totalValue) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock3.symbol} company={stock3.longName}\n                    number={'$' + Math.round(stock3.currentPrice * stock3.shares * 100) / 100}\n                    percent={Math.round(((stock3.currentPrice * stock3.shares) / totalValue) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock4.symbol} company={stock4.longName}\n                    number={'$' + Math.round(stock4.currentPrice * stock4.shares * 100) / 100}\n                    percent={Math.round(((stock4.currentPrice * stock4.shares) / totalValue) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock5.symbol} company={stock5.longName}\n                    number={'$' + Math.round(stock5.currentPrice * stock5.shares * 100) / 100}\n                    percent={Math.round(((stock5.currentPrice * stock5.shares) / totalValue) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock6.symbol} company={stock6.longName}\n                    number={'$' + Math.round(stock6.currentPrice * stock6.shares * 100) / 100}\n                    percent={Math.round(((stock6.currentPrice * stock6.shares) / totalValue) * 10000) / 100 + '%'} />\n            </div>\n        </div >\n    );\n};\n\nconst mapStateToProps = ({ portfolio }) => {\n    return {\n        stocks: portfolio.stocks,\n        totalValue: portfolio.totalValue\n    }\n}\n\nexport const MiniaturesAllocation = connect(mapStateToProps, null)(ComponentMiniaturesAllocation);\n\nComponentMiniaturesAllocation.propTypes = {\n    stocks: PropTypes.array,\n    totalValue: PropTypes.number\n}","import React from 'react';\nimport { StockMiniature } from '../../../ui';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './miniatures.module.css';\n\n/**\n * Miniatrues Dividends.\n * @param {object} props - Props.\n * @param {object[]} props.stocks - Stock list from redux state.\n * @returns {Element} MiniaturesDividends component.\n */\nexport const ComponentMiniaturesDividends = ({ stocks }) => {\n\n    let stocksCopy = [...stocks];\n    stocksCopy.sort((a, b) => (b.dividendRate * b.shares) - (a.dividendRate * a.shares));\n    let stock1 = stocksCopy[0];\n    let stock2 = stocksCopy[1];\n    let stock3 = stocksCopy[2];\n    let stock4 = stocksCopy[stocksCopy.length - 3];\n    let stock5 = stocksCopy[stocksCopy.length - 2];\n    let stock6 = stocksCopy[stocksCopy.length - 1];\n\n    return (\n        <div>\n            <h2>top payers</h2>\n            <div className={styles.miniatures}>\n                <StockMiniature\n                    gain={1}\n                    ticker={stock1.symbol} company={stock1.longName}\n                    percent={'$' + Math.round(stock1.dividendRate * stock1.shares * 100) / 100}\n                    number={Math.round((stock1.dividendRate / stock1.avarageCost) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock2.symbol} company={stock2.longName}\n                    percent={'$' + Math.round(stock2.dividendRate * stock2.shares * 100) / 100}\n                    number={Math.round((stock2.dividendRate / stock2.avarageCost) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock3.symbol} company={stock3.longName}\n                    percent={'$' + Math.round(stock3.dividendRate * stock3.shares * 100) / 100}\n                    number={Math.round((stock3.dividendRate / stock3.avarageCost) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock4.symbol} company={stock4.longName}\n                    percent={'$' + Math.round(stock4.dividendRate * stock4.shares * 100) / 100}\n                    number={Math.round((stock4.dividendRate / stock4.avarageCost) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock5.symbol} company={stock5.longName}\n                    percent={'$' + Math.round(stock5.dividendRate * stock5.shares * 100) / 100}\n                    number={Math.round((stock5.dividendRate / stock5.avarageCost) * 10000) / 100 + '%'} />\n                <StockMiniature\n                    gain={1}\n                    ticker={stock6.symbol} company={stock6.longName}\n                    percent={'$' + Math.round(stock6.dividendRate * stock6.shares * 100) / 100}\n                    number={Math.round((stock6.dividendRate / stock6.avarageCost) * 10000) / 100 + '%'} />\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ portfolio }) => {\n    return {\n        stocks: portfolio.stocks\n    }\n}\n\nexport const MiniaturesDividends = connect(mapStateToProps, null)(ComponentMiniaturesDividends);\n\nComponentMiniaturesDividends.propTypes = {\n    stocks: PropTypes.array\n}\n","import React from 'react';\nimport { StockMiniature } from '../../../ui';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './miniatures.module.css';\n\n/**\n * Miniatrues Gains.\n * @param {object} props - Props.\n * @param {object[]} props.stocks - Stock list from redux state.\n * @returns {Element} MiniaturesGains component.\n */\nconst ComponentMiniaturesGains = ({ stocks }) => {\n    let stocksCopy = [...stocks]\n    stocksCopy.sort((a, b) => (b.currentPrice - b.avarageCost) - (a.currentPrice - a.avarageCost));\n    let stock1 = stocksCopy[0];\n    let stock2 = stocksCopy[1];\n    let stock3 = stocksCopy[2];\n    let stock4 = stocksCopy[stocksCopy.length - 3];\n    let stock5 = stocksCopy[stocksCopy.length - 2];\n    let stock6 = stocksCopy[stocksCopy.length - 1];\n\n    return (\n        <div>\n            <h2>top movers</h2>\n            <div className={styles.miniatures}>\n                <StockMiniature\n                    gain={stock1.currentPrice - stock1.avarageCost}\n                    ticker={stock1.symbol} company={stock1.longName}\n                    number={(Math.round((stock1.currentPrice - stock1.avarageCost) * stock1.shares * 100) / 100 > 0 ? '+' : '') + Math.round((stock1.currentPrice - stock1.avarageCost) * stock1.shares * 100) / 100}\n                    percent={`${(Math.round(((stock1.currentPrice - stock1.avarageCost) / stock1.avarageCost) * 100 * 100) / 100 > 0 ? '+' : '') + Math.round(((stock1.currentPrice - stock1.avarageCost) / stock1.avarageCost) * 100 * 100) / 100}%`} />\n                <StockMiniature\n                    gain={stock2.currentPrice - stock2.avarageCost}\n                    ticker={stock2.symbol}\n                    company={stock2.longName}\n                    number={(Math.round((stock2.currentPrice - stock2.avarageCost) * stock2.shares * 100) / 100 > 0 ? '+' : '') + Math.round((stock2.currentPrice - stock2.avarageCost) * stock2.shares * 100) / 100}\n                    percent={`${(Math.round(((stock2.currentPrice - stock2.avarageCost) / stock2.avarageCost) * 100 * 100) / 100 > 0 ? '+' : '') + Math.round(((stock2.currentPrice - stock2.avarageCost) / stock2.avarageCost) * 100 * 100) / 100}%`} />\n                <StockMiniature\n                    gain={stock3.currentPrice - stock3.avarageCost}\n                    ticker={stock3.symbol}\n                    company={stock3.longName}\n                    number={(Math.round((stock3.currentPrice - stock3.avarageCost) * stock3.shares * 100) / 100 > 0 ? '+' : '') + Math.round((stock3.currentPrice - stock3.avarageCost) * stock3.shares * 100) / 100}\n                    percent={`${(Math.round(((stock3.currentPrice - stock3.avarageCost) / stock3.avarageCost) * 100 * 100) / 100 > 0 ? '+' : '') + Math.round(((stock3.currentPrice - stock3.avarageCost) / stock3.avarageCost) * 100 * 100) / 100}%`} />\n                <StockMiniature\n                    gain={stock4.currentPrice - stock4.avarageCost}\n                    ticker={stock4.symbol}\n                    company={stock4.longName}\n                    number={(Math.round((stock4.currentPrice - stock4.avarageCost) * stock4.shares * 100) / 100 > 0 ? '+' : '') + Math.round((stock4.currentPrice - stock4.avarageCost) * stock4.shares * 100) / 100}\n                    percent={`${(Math.round(((stock4.currentPrice - stock4.avarageCost) / stock4.avarageCost) * 100 * 100) / 100 > 0 ? '+' : '') + Math.round(((stock4.currentPrice - stock4.avarageCost) / stock4.avarageCost) * 100 * 100) / 100}%`} />\n                <StockMiniature\n                    gain={stock5.currentPrice - stock5.avarageCost}\n                    ticker={stock5.symbol}\n                    company={stock5.longName}\n                    number={(Math.round((stock5.currentPrice - stock5.avarageCost) * stock5.shares * 100) / 100 > 0 ? '+' : '') + Math.round((stock5.currentPrice - stock5.avarageCost) * stock5.shares * 100) / 100}\n                    percent={`${(Math.round(((stock5.currentPrice - stock5.avarageCost) / stock5.avarageCost) * 100 * 100) / 100 > 0 ? '+' : '') + Math.round(((stock5.currentPrice - stock5.avarageCost) / stock5.avarageCost) * 100 * 100) / 100}%`} />\n                <StockMiniature\n                    gain={stock6.currentPrice - stock6.avarageCost}\n                    ticker={stock6.symbol}\n                    company={stock6.longName}\n                    number={(Math.round((stock6.currentPrice - stock6.avarageCost) * stock6.shares * 100) / 100 > 0 ? '+' : '') + Math.round((stock6.currentPrice - stock6.avarageCost) * stock6.shares * 100) / 100}\n                    percent={`${(Math.round(((stock6.currentPrice - stock6.avarageCost) / stock6.avarageCost) * 100 * 100) / 100 > 0 ? '+' : '') + Math.round(((stock6.currentPrice - stock6.avarageCost) / stock6.avarageCost) * 100 * 100) / 100}%`} />\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ portfolio }) => {\n    return {\n        stocks: portfolio.stocks\n    }\n}\n\nexport const MiniaturesGains = connect(mapStateToProps, null)(ComponentMiniaturesGains);\n\nComponentMiniaturesGains.propTypes = {\n    stocks: PropTypes.array\n}\n","import React from 'react';\nimport { CollumnChart } from '../../../../ui';\nimport PropTypes from 'prop-types';\n\n/**\n * Dividends by month chart.\n * @param {object} props - Props.\n * @param {Array} props.data - Dividend data from redux state.\n * @returns {Element} Monthly component.\n */\nexport const Monthly = ({ data }) => {\n    return (\n        <CollumnChart\n            scaleData={scaleData}\n            data={paidByMonth(data)}\n        />\n    )\n}\n\nconst paidByMonth = (data) => {\n    let paid = [];\n\n    for (let i = 0; i < data.length; i++) {\n        for (let j = 0; j < data[i][1].length; j++) {\n            paid.push(data[i][1][j][1].slice(1));\n        }\n    }\n\n    const date = new Date();\n    const currentMonth = date.getMonth();\n    const month = 12 - currentMonth;\n    paid.splice(paid.length - month);\n\n    for (let i = 0; i < paid.length; i++) {\n        if (paid[i] > 0) {\n            paid = paid.splice(i);\n            break;\n        }\n    }\n\n    return paid;\n};\n\nconst scaleData = (data, idx) => {\n    let scales = [0];\n    for (let i = Math.ceil(data[idx]); ; i++) {\n        if (i > 1000) {\n            if (i % 1000 === 0) {\n                for (let j = 1; j < 5; j++) {\n                    scales.push(i / 5 * j);\n                }\n                scales.push(i);\n                break;\n            }\n        } else {\n            if (i % 10 === 0) {\n                for (let j = 1; j < 5; j++) {\n                    scales.push(i / 5 * j);\n                }\n                scales.push(i);\n                break;\n            }\n        }\n    }\n    return scales;\n};\n\nMonthly.propTypes = {\n    data: PropTypes.array\n}","import React from 'react';\nimport { CollumnChart } from '../../../../ui';\nimport PropTypes from 'prop-types';\n\n/**\n * Dividends by year chart.\n * @param {object} props - Props.\n * @param {Array} props.data - Dividend data from redux state.\n * @returns {Element} Yearly component.\n */\nexport const Yearly = ({ data }) => {\n    return (\n        <CollumnChart\n            scaleData={scaleData}\n            data={paidByYear(data)}\n        />\n    )\n}\n\nconst paidByYear = (data) => {\n    let paid = [];\n\n    for (let i = 0; i < data.length; i++) {\n        paid.push(data[i][2]);\n    }\n\n    for (let i = 0; i < paid.length; i++) {\n        if (paid[i] > 0) {\n            paid = paid.splice(i);\n            break;\n        }\n    }\n\n    return paid;\n};\n\nconst scaleData = (data, idx) => {\n    let scales = [0];\n    for (let i = Math.ceil(data[idx]); ; i++) {\n        if (i > 1000) {\n            if (i % 1000 === 0) {\n                for (let j = 1; j < 5; j++) {\n                    scales.push(i / 5 * j);\n                }\n                scales.push(i);\n                break;\n            }\n        } else {\n            if (i % 10 === 0) {\n                for (let j = 1; j < 5; j++) {\n                    scales.push(i / 5 * j);\n                }\n                scales.push(i);\n                break;\n            }\n        }\n    }\n    return scales;\n};\n\nYearly.propTypes = {\n    data: PropTypes.array\n}","import React, { useEffect, useState, Fragment } from 'react';\nimport { Spinner, Tabs } from '../../../../ui/';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Monthly } from './monthly';\nimport { Yearly } from './yearly';\nimport styles from './dividends-period.module.css';\n\n/**\n * Dividends by month/year chart.\n * @param {object} props - Props.\n * @param {boolean} props.empty - True if there is no dividend data in redux state.\n * @param {Array} props.dividends - Dividend data from redux state.\n * @returns {Element} DividendsPeriod component.\n */\nexport const DividendsPeriod = ({ empty, dividends }) => {\n\n    let [loading, setLoading] = useState(true);\n\n    const load = () => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 400);\n        return <Spinner />;\n    };\n\n    const history = useHistory();\n\n    useEffect(() => {\n        setLoading(true);\n        history.replace('/dividends/');\n    }, [dividends])\n\n    const content = empty ?\n        <p className={styles.text}>Add dividends that you have recieved recently, to start seeing more data</p>\n        :\n        loading ? load()\n            :\n            (<Fragment>\n                <span className={styles.switch}>\n                    <Tabs options={['monthly', 'yearly']} small />\n                </span>\n                <h2 className={styles.title}>dividends recieved</h2>\n                <div className={styles.content}>\n                    <Switch>\n                        <Route path='/(dividends/monthly|dividends/)'>\n                            <Monthly data={dividends} />\n                        </Route>\n                        <Route path='/dividends/yearly'>\n                            <Yearly data={dividends} />\n                        </Route>\n                    </Switch>\n                </div>\n            </Fragment >)\n\n    return (\n        <div className={styles.container}>\n            {content}\n        </div>\n    );\n}\n\nDividendsPeriod.propTypes = {\n    empty: PropTypes.bool,\n    dividends: PropTypes.array\n}","import React, { useState } from 'react';\nimport { Button, Input, Popup } from '../../../../ui';\nimport PropTypes from 'prop-types';\nimport styles from './dividend-popup.module.css';\n\n/**\n * Dividend popup.\n * @param {object} props - Props.\n * @param {Function} props.onClose - Dividend popup onClose callback function.\n * @param {Function} props.addDividend - Redux action for adding dividend recieved a month.\n * @param {string} props.month - Month chosen by click on a table dividends recieved.\n * @param {number} props.year - Month chosen by click on a table dividends recieved.\n * @param {string} props.dividendAmount - Dividend amount at a paid at a certain month chosen by click on a table dividends recieved.\n * @returns {Element} DividendPopup component.\n */\nexport const DividendPopup = ({ onClose, addDividend, month, year, dividendAmount }) => {\n\n    const rgx = /^[0-9]*\\.?[0-9]*$/;\n\n    let disabled = true;\n\n    const onSubmit = () => {\n\n        if (error || !dividend.toString().match(rgx)) {\n            disabled = true;\n            return;\n        }\n\n        if (dividend === '') setDividend(0);\n\n        addDividend(year, month, Math.round(dividend * 100) / 100);\n        \n        onClose();\n    };\n\n    const onKeyPress = (e) => {\n        if (e.code === 'Enter') onSubmit();\n    };\n\n    const [dividend, setDividend] = useState(dividendAmount.slice(1));\n    const [error, setError] = useState(false);\n\n    if (!error && dividend.toString().match(rgx)) {\n        disabled = false;\n    } else {\n        disabled = true;\n    }\n\n    const onBlur = () => {\n        if (!dividend.toString().match(rgx)) setError(true)\n    };\n    const onFocus = (e) => {\n        e.target.select();\n        if (error) setError(false);\n    };\n\n    const head = (\n        <div className={styles.head}>\n            <p className={styles.company}>{month}</p>\n            <br />\n            <p className={styles.ticker}>Dividends recieved in {month} {year}</p>\n            <div className={styles.bar}></div>\n        </div>\n    );\n\n    const inside = (\n        <div>\n            <div className={styles.inside}>\n                <Input\n                    label={'Recieved'}\n                    value={dividend}\n                    width={'250'}\n                    onBlur={onBlur}\n                    onFocus={onFocus}\n                    error={error}\n                    focus\n                    errorMessage={'Invalid format'}\n                    onChange={e => {\n                        setDividend(e.target.value);\n                    }} />\n            </div>\n            <div className={styles.submit}>\n                <Button\n                    onClick={onSubmit}\n                    width={'262'}\n                    disabled={disabled} >submit</Button>\n            </div>\n        </div>\n    );\n\n    return (\n        <Popup onClose={onClose} head={head} inside={inside} onKeyPress={onKeyPress} />\n    );\n}\n\nDividendPopup.propTypes = {\n    onClose: PropTypes.func,\n    addDividend: PropTypes.func,\n    month: PropTypes.string,\n    year: PropTypes.number,\n    dividendAmount: PropTypes.string\n}\n","import React from 'react';\nimport { Button, Popup } from '../../../../ui';\nimport PropTypes from 'prop-types';\nimport styles from './dividend-popup.module.css';\n\n/**\n * Dividend empty popup.\n * @param {object} props - Props.\n * @param {Function} props.onClose - Dividend popup onClose callback function.\n * @param {string} props.month - Month chosen by click on a table dividends recieved.\n * @param {number} props.year - Month chosen by click on a table dividends recieved.\n * @returns {Element} DividendPopupEmpty component.\n */\nexport const DividendPopupEmpty = ({ onClose, month, year }) => {\n\n    const head = (\n        <div className={styles.head}>\n            <p className={styles.company}>{month}, {year}</p>\n            <div className={styles.bar}></div>\n        </div>\n    );\n\n    const inside = (\n        <div>\n            <p className={styles.message}>\n                Come back when {month} is over!\n            </p>\n            <div className={styles.submit}>\n                <Button\n                    onClick={onClose}\n                    width={'262'}>\n                    ok\n                </Button>\n            </div>\n        </div>\n    );\n\n    return (\n        <Popup onClose={onClose} head={head} inside={inside} />\n    );\n}\n\nDividendPopupEmpty.propTypes = {\n    onClose: PropTypes.func,\n    month: PropTypes.string,\n    year: PropTypes.number,\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Table } from '../../../../ui/';\nimport { DividendPopup, DividendPopupEmpty } from '../popups';\nimport PropTypes from 'prop-types';\nimport { addDividend, addYear } from '../../../../actions';\nimport styles from './dividends-recieved.module.css';\n\n/**\n * Dividends recieved table.\n * @param {object} props - Props.\n * @param {string[]} props.dividendsRecieved - Dividends recieved data by year and monthly.\n * @param {Function} props.addYear - Redux action for adding year for when dividends has been recieved.\n * @param {Function} props.addDividend - Redux action for adding dividend recieved a month.\n * @returns {Element} DividendsRecieved component.\n */\nexport const ComponentDividendsRecieved = ({ dividendsRecieved, addYear, addDividend }) => {\n\n    const date = new Date();\n    const currentMonth = date.getMonth();\n\n    const onClose = () => {\n        document.body.style.overflow = 'overlay';\n        setPopupOn(false);\n    };\n\n    const onClick = (dividend) => {\n        setDividendAmount(dividend[1]);\n        const requestedMonth = (month) => {\n            switch (month) {\n                case 'January':\n                    return 0;\n                case 'February':\n                    return 1;\n                case 'March':\n                    return 2;\n                case 'April':\n                    return 3;\n                case 'May':\n                    return 4;\n                case 'June':\n                    return 5;\n                case 'July':\n                    return 6;\n                case 'August':\n                    return 7;\n                case 'September':\n                    return 8;\n                case 'October':\n                    return 9;\n                case 'November':\n                    return 10;\n                case 'December':\n                    return 11;\n            }\n        }\n        if (requestedMonth(dividend[0]) >= currentMonth\n            && year === date.getFullYear()\n        ) {\n            setUpcoming(true);\n        } else setUpcoming(false);\n        setMonth(dividend[0]);\n        setPopupOn(true);\n    };\n\n    let [year, setYear] = useState(date.getFullYear());\n    const tableData = dividendsRecieved.find((item) => item[0] === year)[1];\n    const total = dividendsRecieved.find((item) => item[0] === year)[2];\n    const [dividendAmount, setDividendAmount] = useState('');\n    const [month, setMonth] = useState('');\n    const [popupOn, setPopupOn] = useState(false);\n    const [upcoming, setUpcoming] = useState(false);\n    const toShow = upcoming ?\n        <DividendPopupEmpty\n            onClose={onClose}\n            year={year}\n            month={month} />\n        :\n        <DividendPopup\n            onClose={onClose}\n            addDividend={addDividend}\n            month={month}\n            year={year}\n            dividendAmount={dividendAmount} />\n    const popup = popupOn ? toShow : null;\n\n    const leftClick = () => {\n        setYear(year -= 1);\n        addYear((year - 1));\n    };\n\n    const rightClick = () => {\n        if (year === date.getFullYear()) return\n        setYear(year += 1);\n    };\n\n    return (\n\n        <div className={styles.container}>\n            {popup}\n            <h2>{year}</h2>\n            <div className={styles.arrows}>\n                <Button navigation icon={'fas fa-chevron-left fa-3x'} onClick={leftClick} />\n                <Table\n                    width={'350'}\n                    collumns={['Month', 'Dividends Recieved']}\n                    data={tableData}\n                    bottom={['TOTAL', `$${total}`]}\n                    onClick={onClick}\n                    onlyDesktop />\n                <Button navigation icon={'fas fa-chevron-right fa-3x'} onClick={rightClick} />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ dividends }) => {\n    return {\n        dividendsRecieved: dividends.dividendsRecieved\n    }\n};\n\nconst mapDispatchToProps = ({ addDividend, addYear });\n\nexport const DividendsRecieved = connect(mapStateToProps, mapDispatchToProps)(ComponentDividendsRecieved);\n\nComponentDividendsRecieved.propTypes = {\n    dividendsRecieved: PropTypes.array,\n    addYear: PropTypes.func,\n    addDividend: PropTypes.func\n}","import React, { useState, useEffect } from 'react';\nimport { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { CollumnChart, Spinner } from '../../../../ui';\nimport styles from './dividends-sector.module.css';\n\n/**\n * Dividends paid by sector chart.\n * @param {object} props - Props.\n * @param {object[]} props.stocks - Stock list from redux state.\n * @returns {Element} DividendsSector component.\n */\nexport const DividendsSector = ({ stocks }) => {\n\n    let [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setLoading(true);\n    }, [stocks])\n\n    const load = () => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 400);\n        return <Spinner />;\n    };\n\n    let paid = {};\n\n    stocks.map((item) => {\n        if (paid[item.sector]) paid[item.sector] += Math.round(item.dividendRate * item.shares * 100) / 100;\n        else paid[item.sector] = Math.round(item.dividendRate * item.shares * 100) / 100;\n    });\n\n    const content = loading ? load()\n        :\n        (<Fragment>\n            <h2>Dividends By Sector</h2>\n            <div className={styles.content}>\n                <CollumnChart\n                    data={sort(paid)}\n                    scaleData={scaleData}\n                    horizontal />\n            </div>\n        </Fragment>)\n\n    return (\n        <div className={styles.container}>\n            {content}\n        </div>\n    );\n}\n\nconst sort = (obj) => {\n\n    let arr = [];\n\n    for (let key in obj) {\n        arr.push([key, obj[key]]);\n    }\n\n    arr.sort((a, b) => {\n        if (a[0] < b[0]) return -1;\n        if (a[0] > b[0]) return 1;\n        return 0;\n    });\n\n    let newObj = {};\n\n    for (let i = 0; i < arr.length; i++) {\n        newObj[arr[i][0]] = arr[i][1];\n    }\n\n    return newObj;\n};\n\nconst scaleData = (data, idx) => {\n    let scales = [0];\n    for (let i = Math.ceil(data[idx]); ; i++) {\n        if (i > 999) {\n            if (i % 1000 === 0) {\n                for (let j = 1; j < 8; j++) {\n                    scales.push(i / 8 * j);\n                }\n                scales.push(i);\n                break;\n            }\n        } else {\n            if (i % 5 === 0) {\n                for (let j = 1; j < 8; j++) {\n                    scales.push(i / 8 * j);\n                }\n                scales.push(i);\n                break;\n            }\n        }\n    }\n    return scales;\n};\n\nDividendsSector.propTypes = {\n    stocks: PropTypes.array\n}","import React, { useState } from 'react';\nimport { MiniaturesDividends } from '../miniatures';\nimport { Button, Spinner } from '../../../ui/';\nimport { DividendsPeriod } from './dividends-period';\nimport { DividendsRecieved } from './dividends-recieved';\nimport { DividendsSector } from './dividends-sector';\nimport { connect } from 'react-redux';\nimport { AddStockPopup } from '../stocks/popups';\nimport { load, ready } from '../../../actions';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport styles from './dividends.module.css';\nimport { Fragment } from 'react';\n\n/**\n * Dividends page.\n * @param {object} props - Props.\n * @param {object[]} props.stocks - Stock list from redux state.\n * @param {boolean} props.loading - Loading redux state.\n * @param {Function} props.load - Redux action for setting loading on.\n * @param {Function} props.ready - Redux action for setting loading off.\n * @param {string[]} props.dividends - Dividends data from redux state.\n * @param {boolean} props.empty - True if no dividends data in redux state.\n * @returns {Element} Dividends component.\n */\nconst ComponentDividends = ({ stocks, loading, load, ready, dividends, empty }) => {\n\n    const onClose = (change) => {\n        document.body.style.overflow = 'overlay';\n        setAddStockPopupOn(false);\n        if (change) {\n            load();\n            ready();\n        }\n    }\n\n    const [addStockPopupOn, setAddStockPopupOn] = useState(false);\n    const addStockPopup = addStockPopupOn ? <AddStockPopup onClose={onClose} /> : null;\n\n    const onAddStock = () => {\n        setAddStockPopupOn(true);\n    };\n\n    const title = empty ? 'dividend activity' : '';\n\n    const miniatures = stocks.length > 5 ? <MiniaturesDividends /> : <h2 className={styles.miniatures}>{title}</h2>;\n\n    if (stocks.length < 1) return (\n        <div className={styles.empty}>\n            {miniatures}\n            <p className={styles.text}>Add few stocks and fill up how many dividends have been recived</p>\n            {addStockPopup}\n            <Button\n                icon={'fas fa-plus fa-sm'}\n                width={'240'}\n                color={'var(--color-gain)'}\n                onClick={onAddStock}\n            >\n                add new holding\n            </Button>\n        </div>\n    )\n    const content = loading ?\n        <Spinner />\n        :\n        <Fragment>\n            <DividendsPeriod dividends={dividends} empty={empty} />\n            <div className={styles.container}>\n                <DividendsRecieved />\n                <DividendsSector stocks={stocks} empty={empty} />\n            </div>\n        </Fragment>\n\n    return (\n        <div className={styles.page}>\n        {miniatures}\n        {content}\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ portfolio, newStock, dividends }) => {\n    return {\n        stocks: portfolio.stocks,\n        loading: newStock.loading,\n        dividends: dividends.dividendsRecieved,\n        empty: dividends.empty\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        ready: ready,\n        load: load\n    }, dispatch);\n};\n\nexport const Dividends = connect(mapStateToProps, mapDispatchToProps)(ComponentDividends);\n\nComponentDividends.propTypes = {\n    stocks: PropTypes.array,\n    loading: PropTypes.bool,\n    load: PropTypes.func,\n    ready: PropTypes.func,\n    dividends: PropTypes.array,\n    empty: PropTypes.bool\n}","import React, { useState } from 'react';\nimport { Button, Spinner, Table } from '../../../ui/';\nimport { MiniaturesGains } from '../miniatures';\nimport { StockPopup, AddStockPopup } from './popups';\nimport { compose } from '../../../utils';\nimport { bindActionCreators } from 'redux';\nimport { withStockService } from '../../hoc';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './stocks.module.css';\nimport { load, ready } from '../../../actions';\n\n/**\n * Stocks page.\n * @param {object} props - Props.\n * @param {string[]} props.tableData - Stock list with necessery data for the table from redux state.\n * @param {object[]} props.stocks - Stock list from redux state.\n * @param {boolean} props.loading - Loading redux state.\n * @param {Function} props.load - Redux action for setting loading on.\n * @param {Function} props.ready - Redux action for setting loading off.\n * @returns {Element} StocksPage component.\n */\nconst ComponentStocks = ({ tableData, stocks, loading, load, ready }) => {\n\n    const onClose = (change) => {\n        document.body.style.overflow = 'overlay';\n        setStockPopupOn(false);\n        setAddStockPopupOn(false);\n        if(change) {\n            load();\n            ready();\n        }\n    };\n    const [ticker, setTicker] = useState('');\n    const [stockPopupOn, setStockPopupOn] = useState(false);\n    const stockPopup = stockPopupOn ? <StockPopup onClose={onClose} ticker={ticker} /> : null;\n    const [addStockPopupOn, setAddStockPopupOn] = useState(false);\n    const addStockPopup = addStockPopupOn ? <AddStockPopup onClose={onClose} /> : null;\n    const onClickStockInfo = (symbol) => {\n        setTicker(symbol[1]);\n        setStockPopupOn(true);\n    }\n    const onClickAddStock = () => {\n        setAddStockPopupOn(true);\n    }\n\n    const table = loading ? <div className={styles.spinner}><Spinner /></div> : (tableData.length > 0 ?\n        <Table\n            onClick={onClickStockInfo}\n            sort\n            width={'1180'}\n            collumns={['Compnay Name', 'Ticker', 'Position', 'Avarage Price', 'Cost', 'Price', 'Market Value', 'Gains/Loses', 'Portfolio Allocation', 'Yield', 'Dividend', 'Dividend Income']}\n            data={tableData} /> : null);\n\n    let miniatures;\n    if (stocks.length < 6) miniatures = <h2>stock list</h2>\n    else miniatures = <MiniaturesGains />\n\n    const empty = stocks.length < 1 ?\n        <div className={styles.empty}>\n            <p className={styles.text}>Add your first stock for the start</p>\n            <Button icon={'fas fa-plus fa-sm'}\n                width={'240'}\n                color={'var(--color-gain)'}\n                onClick={onClickAddStock} >\n                add new holding\n            </Button>\n        </div>\n        :\n        <div className={styles.button}>\n            <Button icon={'fas fa-plus fa-sm'}\n                width={'1182'}\n                color={'var(--color-gain)'}\n                onClick={onClickAddStock} >\n                add new holding\n            </Button>\n        </div>\n\n    return (\n        <div className={styles.page}>\n            {miniatures}\n            <div className={styles.table}>\n                {stockPopup}\n                {table}\n            </div>\n            {addStockPopup}\n            {empty}\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ portfolio, newStock }) => {\n    return {\n        stocks: portfolio.stocks,\n        tableData: portfolio.tableData,\n        loading: newStock.fakeLoading\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        ready: ready,\n        load: load\n    }, dispatch);\n};\n\nexport const Stocks = (\n    compose(\n        withStockService(),\n        connect(mapStateToProps, mapDispatchToProps)\n    )(ComponentStocks)\n);\n\nComponentStocks.propTypes = {\n    tableData: PropTypes.array,\n    stocks: PropTypes.array,\n    loading: PropTypes.bool,\n    load: PropTypes.func,\n    ready: PropTypes.func\n}\n\n","import React, { useState } from 'react';\nimport { Fragment } from 'react';\nimport { Spinner, Table, PieChart } from '../../../../ui';\nimport PropTypes from 'prop-types';\nimport styles from '../allocation.module.css';\n\n/**\n * Allocation by contry - table and chart.\n * @param {object} props - Props.\n * @param {string[]} props.data - Allocation by country data for table from redux state.\n * @returns {Element} Allocation by contry.\n */\nexport const AllocationCountry = ({ data }) => {\n\n    const [loading, setLoading] = useState(true);\n\n    const load = () => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 450);\n        return <Spinner />\n    };\n    \n    const content = loading ? load()\n        : <PieChart\n            canvasWidth={712}\n            canvasHeight={540}\n            data={data} />;\n\n    return (\n        <Fragment>\n            <div className={styles.chart}>\n                {content}\n            </div>\n            <Table\n                width={'420'}\n                collumns={['Country', 'Allocation']}\n                data={data}\n                onClick={() => { }}\n                onlyDesktop />\n        </Fragment>\n    )\n};\n\nAllocationCountry.propTypes = {\n    data: PropTypes.array,\n}\n\n","import React, { useState } from 'react';\nimport { Fragment } from 'react';\nimport { PieChart, Spinner, Table } from '../../../../ui';\nimport PropTypes from 'prop-types';\nimport styles from '../allocation.module.css';\n\n/**\n * Allocation by sector - table and chart.\n * @param {object} props - Props.\n * @param {string[]} props.data - Allocation by sector data for table from redux state.\n * @returns {Element} Allocation by sector.\n */\nexport const AllocationSector = ({ data }) => {\n\n    const [loading, setLoading] = useState(true);\n\n    const load = () => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 450);\n        return <Spinner />\n    };\n\n    const content = loading ? load()\n        : <PieChart\n            canvasWidth={712}\n            canvasHeight={540}\n            data={data} />;\n\n    return (\n        <Fragment>\n            <div className={styles.chart}>\n                {content}\n            </div>\n\n            <Table\n                width={'420'}\n                collumns={['Sector', 'Allocation']}\n                data={data}\n                onClick={() => { }}\n                onlyDesktop />\n        </Fragment>\n    )\n};\n\nAllocationSector.propTypes = {\n    data: PropTypes.array,\n}","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Tabs, Button, Spinner } from '../../../ui/';\nimport { MiniaturesAllocation } from '../miniatures';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './allocation.module.css';\nimport { AddStockPopup } from '../stocks/popups';\nimport { load, ready } from '../../../actions';\nimport { bindActionCreators } from 'redux';\nimport { AllocationCountry, AllocationSector } from './allocation-sector-contry';\n\n/**\n * Allocation page.\n * @param {object} props - Props.\n * @param {object[]} props.stocks - Stock list from redux state.\n * @param {string[]} props.allocationSector - Allocation by sector data for table from redux state.\n * @param {string[]} props.allocationCountry - Allocation by contry data btfor table from redux state.\n * @param {boolean} props.loading - Loading redux state.\n * @param {Function} props.load - Redux action for setting loading on.\n * @param {Function} props.ready - Redux action for setting loading off.\n * @returns {Element} Allocation component.\n */\nexport const ComponentAllocation = ({ stocks, allocationSector, allocationCountry, loading, load, ready }) => {\n\n    const onClose = (change) => {\n        document.body.style.overflow = 'overlay';\n        setAddStockPopupOn(false);\n        if (change) {\n            load();\n            ready();\n        }\n    };\n\n    const [addStockPopupOn, setAddStockPopupOn] = useState(false);\n    const addStockPopup = addStockPopupOn ? <AddStockPopup onClose={onClose} /> : null;\n\n    const onAddStock = () => {\n        setAddStockPopupOn(true);\n    };\n\n    const miniatures = stocks.length > 5 ? <MiniaturesAllocation /> : <h2>portfolio allocation</h2>;\n\n    if (stocks.length < 1) return (\n        <div className={styles.empty}>\n            {miniatures}\n            <p className={styles.text}>Add few stocks to see your portfolio allocation</p>\n            {addStockPopup}\n            <Button icon={'fas fa-plus fa-sm'} width={'240'} color={'var(--color-gain)'} onClick={onAddStock}>\n                add new holding\n            </Button>\n        </div>\n    )\n\n    const content = loading ?\n        <Spinner />\n        :\n        (<div className={styles.container}>\n            <span className={styles.switch}>\n                <Tabs options={['sector', 'country']} small />\n            </span>\n            <Switch>\n                <Route path='/(allocation/sector|allocation/)' >\n                    <AllocationSector data={allocationSector} />\n                </Route>\n                <Route path='/allocation/country' >\n                    <AllocationCountry data={allocationCountry} />\n                </Route>\n            </Switch>\n        </div>);\n\n    return (\n        <div className={styles.page}>\n            {miniatures}\n            {content}\n        </div>\n    );\n};\n\nconst mapStateToProps = ({ portfolio, newStock }) => {\n    return {\n        stocks: portfolio.stocks,\n        allocationSector: portfolio.allocationSector,\n        allocationCountry: portfolio.allocationCountry,\n        loading: newStock.loading\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        ready: ready,\n        load: load\n    }, dispatch);\n};\n\nexport const Allocation = connect(mapStateToProps, mapDispatchToProps)(ComponentAllocation);\n\nComponentAllocation.propTypes = {\n    stocks: PropTypes.array,\n    allocationSector: PropTypes.array,\n    allocationCountry: PropTypes.array,\n    loading: PropTypes.bool,\n    load: PropTypes.func,\n    ready: PropTypes.func\n}","import { Route, Switch, Redirect } from 'react-router-dom';\nimport React from 'react';\nimport { Header } from '../header/'\nimport { Stocks, Dividends, Allocation } from '../pages';\nimport './app.css';\n\n/**\n * Main App page.\n * @returns {Element} App component.\n */\nexport const App = () => {\n  return (\n    <div className='app'>\n      <Header />\n      <div className='body'>\n        <Switch>\n          <Route path='/stocks/' component={Stocks} />\n          <Route path='/dividends/' component={Dividends} />\n          <Route path='/allocation/' component={Allocation} />\n          <Redirect from=\"/\" to=\"/stocks\" />\n        </Switch>\n      </div>\n    </div>\n  )\n}\n","export const dividends = (state, action) => {\n\n    const date = new Date();\n    const currentYear = date.getFullYear();\n\n    if (state === undefined) {  \n        return {\n            dividendsRecieved: [\n                [\n                    currentYear - 1,\n                    [\n                        ['January', `$${0}`],\n                        ['February', `$${0}`],\n                        ['March', `$${0}`],\n                        ['April', `$${0}`],\n                        ['May', `$${0}`],\n                        ['June', `$${0}`],\n                        ['July', `$${0}`],\n                        ['August', `$${0}`],\n                        ['September', `$${0}`],\n                        ['October', `$${0}`],\n                        ['November', `$${0}`],\n                        ['December', `$${0}`],\n                    ],\n                    0\n                ],\n                [\n                    currentYear,\n                    [\n                        ['January', `$${0}`],\n                        ['February', `$${0}`],\n                        ['March', `$${0}`],\n                        ['April', `$${0}`],\n                        ['May', `$${0}`],\n                        ['June', `$${0}`],\n                        ['July', `$${0}`],\n                        ['August', `$${0}`],\n                        ['September', `$${0}`],\n                        ['October', `$${0}`],\n                        ['November', `$${0}`],\n                        ['December', `$${0}`],\n                    ],\n                    0\n                ]\n            ],\n            empty: true\n        }\n    }\n\n    switch (action.type) {\n        case 'ADD_DIVIDEND':\n            return addDividend(state.dividends, action);\n        case 'ADD_YEAR':\n            return addYear(state.dividends, action);\n        default:\n            return state.dividends;\n    }\n};\n\nconst updateEmpty = (dividendsRecieved) => {\n    let empty = true;\n    dividendsRecieved.map((item) => {\n        if (item[2] > 0) empty = false;\n    });\n    return empty;\n};\n\n/**\n * Function addDividend (when recieved dividend have been added or changed).\n * @param {object} state - Current state.\n * @param {object} action - Redux action.\n * @returns {object} New state with added dividend.\n */\nconst addDividend = (state, action) => {\n\n    const { year, month, paid } = action;\n    const { dividendsRecieved } = state;\n\n    const yearIdx = dividendsRecieved.findIndex((item) => item[0] === year);\n    const monthIdx = dividendsRecieved[yearIdx][1].findIndex((item) => item[0] === month);\n\n    const newPayment = [\n        month,\n        `$${+paid}`,\n    ];\n\n    const newDividendsData =  [\n        ...dividendsRecieved[yearIdx][1].slice(0, monthIdx),\n        newPayment,\n        ...dividendsRecieved[yearIdx][1].slice(monthIdx + 1),\n    ];\n\n    let total = 0;\n    for (let i = 0; i < newDividendsData.length; i++) {\n        total += +newDividendsData[i][1].slice(1);\n    }\n\n    const newYear = [\n        year,\n        newDividendsData,\n        Math.round(total * 100) / 100\n    ];\n\n    const newDividendsRecieved = [\n        ...dividendsRecieved.slice(0, yearIdx),\n        newYear,\n        ...dividendsRecieved.slice(yearIdx + 1)\n    ];\n\n    return {\n        ...state,\n        dividendsRecieved: newDividendsRecieved,\n        empty: updateEmpty(newDividendsRecieved)\n    }\n};\n\n/**\n * Function addYear (when new year have been added).\n * @param {object} state - Current state.\n * @param {object} action - Redux action.\n * @returns {object} New state with new empty year of dividends.\n */\nconst addYear = (state, action) => {\n\n    const { dividendsRecieved } = state;\n    const { year } = action;\n\n    const idx = dividendsRecieved.findIndex((item) => item[0] === year);\n\n    if (idx === -1) {\n        const newYear = [\n            year,\n            [\n                ['January', `$${0}`],\n                ['February', `$${0}`],\n                ['March', `$${0}`],\n                ['April', `$${0}`],\n                ['May', `$${0}`],\n                ['June', `$${0}`],\n                ['July', `$${0}`],\n                ['August', `$${0}`],\n                ['September', `$${0}`],\n                ['October', `$${0}`],\n                ['November', `$${0}`],\n                ['December', `$${0}`],\n            ],\n            0\n        ];\n\n        const newDividendsRecieved = [\n            newYear,\n            ...dividendsRecieved\n        ];\n\n        return {\n            ...state,\n            dividendsRecieved: newDividendsRecieved,\n        }\n    } else return state;\n};","export const newStock = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            stock: null,\n            loading: false,\n            fakeLoading: false,\n            error: null\n        }\n    }\n\n    switch (action.type) {\n        case 'FETCH_STOCK_REQUEST':\n            return {\n                loading: true,\n                stock: null,\n                error: null\n            };\n        case 'FETCH_STOCK_SUCCESS':\n            return {\n                loading: false,\n                stock: action.stock,\n                error: null\n            };\n        case 'FETCH_STOCK_FAILURE':\n            return {\n                loading: false,\n                stock: null,\n                error: true\n            };\n        case 'LOADING':\n            return {\n                ...state,\n                fakeLoading: true\n            };\n        case 'READY':\n            return {\n                ...state,\n                fakeLoading: false\n            };\n        case 'CLEAR_STATE':\n            return {\n                ...state,\n                stock: null\n            }\n        default:\n            return state.newStock;\n    }\n\n}","export const portfolio = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            totalValue: 0,\n            totalGains: 0,\n            totalDividends: 0,\n            stocks: [],\n            tableData: [],\n            allocationSector: [],\n            allocationCountry: [],\n        }\n    }\n\n    switch (action.type) {\n        case 'ADD_STOCK':\n            return add(state.portfolio, action);\n        case 'EDIT_STOCK':\n            return edit(state.portfolio, action);\n        case 'DELETE_STOCK':\n            return deleted(state.portfolio, action);\n        default:\n            return state.portfolio;\n    }\n};\n\nconst updatePortfolio = (state, stockList) => {\n\n    let newTotalValue = 0;\n    stockList.map((item) => newTotalValue += item.currentPrice * item.shares);\n    newTotalValue = Math.round(newTotalValue * 100) / 100\n\n    let totalCost = 0\n    stockList.map((item) => totalCost += item.avarageCost * item.shares);\n    let newTotalGains = Math.round((newTotalValue - totalCost) * 100) / 100;\n\n    let newTableData = stockList.map((item) => {\n        return [\n            item.longName,\n            item.symbol,\n            item.shares,\n            `$${Math.round((item.avarageCost) * 100) / 100}`,\n            `$${Math.round((item.avarageCost * item.shares) * 100) / 100}`,\n            `$${Math.round((item.currentPrice) * 100) / 100}`,\n            `$${Math.round((item.currentPrice * item.shares) * 100) / 100}`,\n            `${((Math.round(((item.currentPrice - item.avarageCost) * item.shares) * 100) / 100) > 0 ? '+' : '') + Math.round(((item.currentPrice - item.avarageCost) * item.shares) * 100) / 100}\\n(${((Math.round((((item.currentPrice - item.avarageCost) / item.avarageCost) * 100) * 100) / 100) > 0 ? '+' : '') + Math.round((((item.currentPrice - item.avarageCost) / item.avarageCost) * 100) * 100) / 100}%)`,\n            `${Math.round((((item.currentPrice * item.shares) / newTotalValue) * 100) * 100) / 100}%`,\n            `${Math.round(((item.dividendRate / item.avarageCost) * 100) * 100) / 100}%`,\n            `$${Math.round((item.dividendRate) * 100) / 100}`,\n            `$${Math.round((item.dividendRate * item.shares) * 100) / 100}`\n        ]\n    });\n\n    let newTotalDividends = 0;\n    stockList.map((item) => newTotalDividends += item.dividendRate * item.shares);\n    newTotalDividends = Math.round(newTotalDividends * 100) / 100;\n\n    let newAllocationSector = [];\n    let allocationSector = {};\n    stockList.map((item) => {\n        if (allocationSector[item.sector]) allocationSector[item.sector] += item.currentPrice * item.shares;\n        else allocationSector[item.sector] = item.currentPrice * item.shares;\n    });\n    for (let key in allocationSector) {\n        let percent = Math.round((allocationSector[key] / newTotalValue) * 10000) / 100;\n        percent += '%';\n        newAllocationSector.push([key, percent]);\n    }\n\n    let newAllocationCountry = [];\n    let allocationCountry = {};\n    stockList.map((item) => {\n        if (allocationCountry[item.country]) allocationCountry[item.country] += item.currentPrice * item.shares;\n        else allocationCountry[item.country] = item.currentPrice * item.shares;\n    });\n    for (let key in allocationCountry) {\n        let percent = Math.round((allocationCountry[key] / newTotalValue) * 10000) / 100;\n        percent += '%';\n        newAllocationCountry.push([key, percent]);\n    }\n\n    return {\n        ...state,\n        stocks: stockList,\n        tableData: newTableData,\n        totalValue: newTotalValue,\n        totalGains: newTotalGains,\n        totalDividends: newTotalDividends,\n        allocationSector: newAllocationSector,\n        allocationCountry: newAllocationCountry\n    }\n}\n\n/**\n * Function add (when a new stock has been added to a portfolio).\n * @param {object} state - Current state.\n * @param {object} action - Redux action.\n * @returns {object} New state with updated portfilio data.\n */\nconst add = (state, action) => {\n\n    let { stocks } = state;\n    let { stock, ticker, avarageCost, shares } = action;\n\n    let newStocks;\n\n    let idx = stocks.findIndex(({ symbol }) => ticker.toUpperCase() === symbol);\n\n    if (idx > -1) {\n        let newShares = stocks[idx].shares + shares;\n        let newAvarageCost = (stocks[idx].avarageCost + avarageCost) / 2;\n\n        let editedStock = {\n            ...stocks[idx],\n            avarageCost: newAvarageCost,\n            shares: newShares\n        }\n\n        newStocks = [\n            ...stocks.slice(0, idx),\n            editedStock,\n            ...stocks.slice(idx + 1),\n        ];\n    }\n    else {\n        stock.avarageCost = avarageCost;\n        stock.shares = shares;\n\n        newStocks = [\n            ...stocks,\n            stock\n        ];\n    }\n\n    return updatePortfolio(state, newStocks);\n}\n\n/**\n * Function edit (when a stock has been edited).\n * @param {object} state - Current state.\n * @param {object} action - Redux action.\n * @returns {object} New state with updated portfilio data.\n */\nconst edit = (state, action) => {\n\n    let { stocks } = state;\n\n    let idx = stocks.findIndex((item) => item.symbol === action.stock.symbol);\n\n    let editedStocks = [\n        ...stocks.slice(0, idx),\n        action.stock,\n        ...stocks.slice(idx + 1),\n    ];\n\n    return updatePortfolio(state, editedStocks);\n}\n\n/**\n * Function delete (when a stock has been deleted to a portfolio).\n * @param {object} state - Current state.\n * @param {object} action - Redux action.\n * @returns {object} New state with updated portfilio data.\n */\nconst deleted = (state, action) => {\n\n    let { stocks } = state;\n\n    let idx = stocks.findIndex((item) => item.symbol === action.ticker)\n\n    let updatedStocks = [\n        ...stocks.slice(0, idx),\n        ...stocks.slice(idx + 1),\n    ];\n\n    return updatePortfolio(state, updatedStocks);\n}","import { reducer } from \"./reducers\";\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst  persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : undefined;\n\nexport const store = createStore(reducer, persistedState, applyMiddleware(thunk));\n\nstore.subscribe(() => {\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n});\n\n\n\n","import { dividends } from \"./dividends\";\nimport { newStock } from \"./newStock\";\nimport { portfolio } from \"./portfolio\";\n\nexport const reducer = (state, action) => {\n\n    return {\n        portfolio: portfolio(state, action),\n        dividends: dividends(state, action),\n        newStock: newStock(state, action)\n    }\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './components/app/';\nimport {  HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { StockServiceProvider } from './stock-service-context/stock-service-context';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { StockService } from './service/stock-service';\n\nconst stockService = new StockService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <StockServiceProvider value={stockService}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </StockServiceProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { ApiKey } from \"./api-key\";\n\nexport class StockService {\n\n    getRes = async (stock) => {\n\n        const res = await fetch(`https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-summary?symbol=${stock}&region=US`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"yh-finance.p.rapidapi.com\",\n                \"x-rapidapi-key\": ApiKey\n            }\n        });\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${stock}`) + `, recieved ${res.status}`\n        }\n\n        return await res.json();\n    }\n\n    getStock = async (ticker) => {\n        const stock = await this.getRes(ticker);\n        \n        return new Promise((resolve) => {\n            resolve(this._transformStock(stock))\n        })\n    }\n\n    _transformStock = async (stock) => {\n\n        const transformYearly = (data) => {\n            if (data) {\n                let yearly = {};\n\n                for (let i = 0; i < data.length; i++) {\n                    yearly[i] = {\n                        date: data[i].date,\n                        revenue: data[i].revenue.raw / 1000000,\n                        earnings: data[i].earnings.raw / 1000000\n                    }\n                }\n\n                return yearly;\n            }\n\n        }\n\n        return {\n            symbol: stock.symbol,\n            longName: stock.price.longName,\n            longBusinessSummery: stock.summaryProfile.longBusinessSummary,\n            currentPrice: stock.financialData.currentPrice.fmt,\n            dividendRate: stock.summaryDetail.dividendRate.fmt,\n            dividendYield: stock.summaryDetail.dividendYield.fmt,\n            payoutRatio: stock.summaryDetail.payoutRatio.fmt,\n            freeCashFlow: stock.financialData.freeCashflow.fmt,\n            sharesOutstanding: stock.defaultKeyStatistics.sharesOutstanding.raw,\n            freeCashFlowPerStock: Math.round((stock.financialData.freeCashflow.raw / stock.defaultKeyStatistics.sharesOutstanding.raw) * 100) / 100,\n            priceToFreeCashFlow: Math.round((stock.financialData.currentPrice.raw / (stock.financialData.freeCashflow.raw / stock.defaultKeyStatistics.sharesOutstanding.raw)) * 100) / 100,\n            country: stock.summaryProfile.country,\n            sector: stock.summaryProfile.sector,\n            marketCap: stock.summaryDetail.marketCap.fmt,\n            enterpriseValue: stock.defaultKeyStatistics.enterpriseValue.fmt,\n            priceToBook: stock.defaultKeyStatistics.priceToBook.fmt,\n            priceToSalesTrailing12Months: Math.round((stock.summaryDetail.marketCap.raw / stock.financialData.totalRevenue.raw) * 100) / 100,\n            chartData: {\n                0: { date: 1629736406, close: 149.95159912109375 },\n                1: { date: 1629466200, close: 148.19000244140625 },\n                2: { date: 1629379800, close: 146.6999969482422 },\n                3: { date: 1629293400, close: 146.36000061035156 },\n                4: { date: 1629207000, close: 150.19000244140625 },\n                5: { date: 1629120600, close: 151.1199951171875 },\n                6: { date: 1628861400, close: 149.10000610351562 },\n                7: { date: 1628775000, close: 148.88999938964844 },\n                8: { date: 1628688600, close: 145.86000061035156 },\n                9: { date: 1628602200, close: 145.60000610351562 },\n                10: { date: 1628515800, close: 146.08999633789062 },\n                11: { date: 1628256600, close: 146.13999938964844 },\n                12: { amount: 0.22, date: 1628256600, type: \"DIVIDEND\", data: 0.22 },\n                13: { date: 1628170200, close: 147.05999755859375 },\n                14: { date: 1628083800, open: 147.27000427246094, high: 147.7899932861328, low: 146.27999877929688, close: 146.9499969482422 },\n                15: { date: 1627997400, open: 145.80999755859375, high: 148.0399932861328, low: 145.17999267578125, close: 147.36000061035156 },\n                16: { date: 1627911000, open: 146.36000061035156, high: 146.9499969482422, low: 145.25, close: 145.52000427246094 },\n                17: { date: 1627651800, open: 144.3800048828125, high: 146.3300018310547, low: 144.11000061035156, close: 145.86000061035156 },\n                18: { date: 1627565400, open: 144.69000244140625, high: 146.5500030517578, low: 144.5800018310547, close: 145.63999938964844 },\n                19: { date: 1627479000, open: 144.80999755859375, high: 146.97000122070312, low: 142.5399932861328, close: 144.97999572753906 },\n                20: { date: 1627392600, open: 149.1199951171875, high: 149.2100067138672, low: 145.5500030517578, close: 146.77000427246094 },\n                21: { date: 1627306200, open: 148.27000427246094, high: 149.8300018310547, low: 147.6999969482422, close: 148.99000549316406 },\n                22: { date: 1627047000, open: 147.5500030517578, high: 148.72000122070312, low: 146.9199981689453, close: 148.55999755859375 },\n                23: { date: 1626960600, open: 145.94000244140625, high: 148.1999969482422, low: 145.80999755859375, close: 146.8000030517578 },\n                24: { date: 1626874200, open: 145.52999877929688, high: 146.1300048828125, low: 144.6300048828125, close: 145.39999389648438 },\n                25: { date: 1626787800, open: 143.4600067138672, high: 147.10000610351562, low: 142.9600067138672, close: 146.14999389648438 },\n                26: { date: 1626701400, open: 143.75, high: 144.07000732421875, low: 141.6699981689453, close: 142.4499969482422 },\n                27: { date: 1626442200, open: 148.4600067138672, high: 149.75999450683594, low: 145.8800048828125, close: 146.38999938964844 },\n                28: { date: 1626355800, open: 149.24000549316406, high: 150, low: 147.08999633789062, close: 148.47999572753906 },\n                29: { date: 1626269400, open: 148.10000610351562, high: 149.57000732421875, low: 147.67999267578125, close: 149.14999389648438 },\n                30: { date: 1626183000, open: 144.02999877929688, high: 147.4600067138672, low: 143.6300048828125, close: 145.63999938964844 },\n                31: { date: 1626096600, open: 146.2100067138672, high: 146.32000732421875, low: 144, close: 144.5 },\n                32: { date: 1625837400, open: 142.75, high: 145.64999389648438, low: 142.64999389648438, close: 145.11000061035156 },\n                33: { date: 1625751000, open: 141.5800018310547, high: 144.05999755859375, low: 140.6699981689453, close: 143.24000549316406 },\n                34: { date: 1625664600, open: 143.5399932861328, high: 144.88999938964844, low: 142.66000366210938, close: 144.57000732421875 },\n                35: { date: 1625578200, open: 140.07000732421875, high: 143.14999389648438, low: 140.07000732421875, close: 142.02000427246094 },\n                36: { date: 1625232600, open: 137.89999389648438, high: 140, low: 137.75, close: 139.9600067138672 },\n                37: { date: 1625146200, open: 136.60000610351562, high: 137.3300018310547, low: 135.75999450683594, close: 137.27000427246094 },\n                38: { date: 1625059800, open: 136.1699981689453, high: 137.41000366210938, low: 135.8699951171875, close: 136.9600067138672 },\n                39: { date: 1624973400, open: 134.8000030517578, high: 136.49000549316406, low: 134.35000610351562, close: 136.3300018310547 },\n                40: { date: 1624887000, open: 133.41000366210938, high: 135.25, low: 133.35000610351562, close: 134.77999877929688 },\n                41: { date: 1624627800, open: 133.4600067138672, high: 133.88999938964844, low: 132.80999755859375, close: 133.11000061035156 },\n                42: { date: 1624541400, open: 134.4499969482422, high: 134.63999938964844, low: 132.92999267578125, close: 133.41000366210938 },\n                43: { date: 1624455000, open: 133.77000427246094, high: 134.32000732421875, low: 133.22999572753906, close: 133.6999969482422 },\n                44: { date: 1624368600, open: 132.1300048828125, high: 134.0800018310547, low: 131.6199951171875, close: 133.97999572753906 },\n                45: { date: 1624282200, open: 130.3000030517578, high: 132.41000366210938, low: 129.2100067138672, close: 132.3000030517578 },\n                46: { date: 1624023000, open: 130.7100067138672, high: 131.50999450683594, low: 130.24000549316406, close: 130.4600067138672 },\n                47: { date: 1623936600, open: 129.8000030517578, high: 132.5500030517578, low: 129.64999389648438, close: 131.7899932861328 },\n                48: { date: 1623850200, open: 130.3699951171875, high: 130.88999938964844, low: 128.4600067138672, close: 130.14999389648438 },\n                49: { date: 1623763800, open: 129.94000244140625, high: 130.60000610351562, low: 129.38999938964844, close: 129.63999938964844 },\n                50: { date: 1623677400, open: 127.81999969482422, high: 130.5399932861328, low: 127.06999969482422, close: 130.47999572753906 },\n                51: { date: 1623418200, open: 126.52999877929688, high: 127.44000244140625, low: 126.0999984741211, close: 127.3499984741211 },\n                52: { date: 1623331800, open: 127.0199966430664, high: 128.19000244140625, low: 125.94000244140625, close: 126.11000061035156 },\n                53: { date: 1623245400, open: 127.20999908447266, high: 127.75, low: 126.5199966430664, close: 127.12999725341797 },\n                54: { date: 1623159000, open: 126.5999984741211, high: 128.4600067138672, low: 126.20999908447266, close: 126.73999786376953 },\n                55: { date: 1623072600, open: 126.16999816894531, high: 126.31999969482422, low: 124.83000183105469, close: 125.9000015258789 },\n                56: { date: 1622813400, open: 124.06999969482422, high: 126.16000366210938, low: 123.8499984741211, close: 125.88999938964844 },\n                57: { date: 1622727000, open: 124.68000030517578, high: 124.8499984741211, low: 123.12999725341797, close: 123.54000091552734 },\n                58: { date: 1622640600, open: 124.27999877929688, high: 125.23999786376953, low: 124.05000305175781, close: 125.05999755859375 },\n                59: { date: 1622554200, open: 125.08000183105469, high: 125.3499984741211, low: 123.94000244140625, close: 124.27999877929688 },\n                60: { date: 1622208600, open: 125.56999969482422, high: 125.80000305175781, low: 124.55000305175781, close: 124.61000061035156 },\n                61: { date: 1622122200, open: 126.44000244140625, high: 127.63999938964844, low: 125.08000183105469, close: 125.27999877929688 },\n                62: { date: 1622035800, open: 126.95999908447266, high: 127.38999938964844, low: 126.41999816894531, close: 126.8499984741211 },\n                63: { date: 1621949400, open: 127.81999969482422, high: 128.32000732421875, low: 126.31999969482422, close: 126.9000015258789 },\n                64: { date: 1621863000, open: 126.01000213623047, high: 127.94000244140625, low: 125.94000244140625, close: 127.0999984741211 },\n                65: { date: 1621603800, open: 127.81999969482422, high: 128, low: 125.20999908447266, close: 125.43000030517578 },\n                66: { date: 1621517400, open: 125.2300033569336, high: 127.72000122070312, low: 125.0999984741211, close: 127.30999755859375 },\n                67: { date: 1621431000, open: 123.16000366210938, high: 124.91999816894531, low: 122.86000061035156, close: 124.69000244140625 },\n                68: { date: 1621344600, open: 126.55999755859375, high: 126.98999786376953, low: 124.77999877929688, close: 124.8499984741211 },\n                69: { date: 1621258200, open: 126.81999969482422, high: 126.93000030517578, low: 125.16999816894531, close: 126.2699966430664 },\n                70: { date: 1620999000, open: 126.25, high: 127.88999938964844, low: 125.8499984741211, close: 127.44999694824219 },\n                71: { date: 1620912600, open: 124.58000183105469, high: 126.1500015258789, low: 124.26000213623047, close: 124.97000122070312 },\n                72: { date: 1620826200, open: 123.4000015258789, high: 124.63999938964844, low: 122.25, close: 122.7699966430664 },\n                73: { date: 1620739800, open: 123.5, high: 126.2699966430664, low: 122.7699966430664, close: 125.91000366210938 },\n                74: { date: 1620653400, open: 129.41000366210938, high: 129.5399932861328, low: 126.80999755859375, close: 126.8499984741211 },\n                75: { date: 1620394200, open: 130.85000610351562, high: 131.25999450683594, low: 129.47999572753906, close: 130.2100067138672 },\n                76: { amount: 0.22, date: 1620394200, type: \"DIVIDEND\", data: 0.22 },\n                77: { date: 1620307800, open: 127.88999938964844, high: 129.75, low: 127.12999725341797, close: 129.74000549316406 },\n                78: { date: 1620221400, open: 129.1999969482422, high: 130.4499969482422, low: 127.97000122070312, close: 128.10000610351562 },\n                79: { date: 1620135000, open: 131.19000244140625, high: 131.49000549316406, low: 126.69999694824219, close: 127.8499984741211 },\n                80: { date: 1620048600, open: 132.0399932861328, high: 134.07000732421875, low: 131.8300018310547, close: 132.5399932861328 },\n                81: { date: 1619789400, open: 131.77999877929688, high: 133.55999755859375, low: 131.07000732421875, close: 131.4600067138672 },\n                82: { date: 1619703000, open: 136.47000122070312, high: 137.07000732421875, low: 132.4499969482422, close: 133.47999572753906 },\n                83: { date: 1619616600, open: 134.30999755859375, high: 135.02000427246094, low: 133.0800018310547, close: 133.5800018310547 },\n                84: { date: 1619530200, open: 135.00999450683594, high: 135.41000366210938, low: 134.11000061035156, close: 134.38999938964844 },\n                85: { date: 1619443800, open: 134.8300018310547, high: 135.05999755859375, low: 133.55999755859375, close: 134.72000122070312 },\n                86: { date: 1619184600, open: 132.16000366210938, high: 135.1199951171875, low: 132.16000366210938, close: 134.32000732421875 },\n                87: { date: 1619098200, open: 133.0399932861328, high: 134.14999389648438, low: 131.41000366210938, close: 131.94000244140625 },\n                88: { date: 1619011800, open: 132.36000061035156, high: 133.75, low: 131.3000030517578, close: 133.5 },\n                89: { date: 1618925400, open: 135.02000427246094, high: 135.52999877929688, low: 131.80999755859375, close: 133.11000061035156 },\n                90: { date: 1618839000, open: 133.50999450683594, high: 135.47000122070312, low: 133.33999633789062, close: 134.83999633789062 },\n                91: { date: 1618579800, open: 134.3000030517578, high: 134.6699981689453, low: 133.27999877929688, close: 134.16000366210938 },\n                92: { date: 1618493400, open: 133.82000732421875, high: 135, low: 133.63999938964844, close: 134.5 },\n                93: { date: 1618407000, open: 134.94000244140625, high: 135, low: 131.66000366210938, close: 132.02999877929688 },\n                94: { date: 1618320600, open: 132.44000244140625, high: 134.66000366210938, low: 131.92999267578125, close: 134.42999267578125 },\n                95: { date: 1618234200, open: 132.52000427246094, high: 132.85000610351562, low: 130.6300048828125, close: 131.24000549316406 },\n                96: { date: 1617975000, open: 129.8000030517578, high: 133.0399932861328, low: 129.47000122070312, close: 133 },\n                97: { date: 1617888600, open: 128.9499969482422, high: 130.38999938964844, low: 128.52000427246094, close: 130.3600006103515 },\n                98: { date: 1617802200, open: 125.83000183105469, high: 127.91999816894531, low: 125.13999938964844, close: 127.9000015258789 },\n                99: { date: 1617715800, open: 126.5, high: 127.12999725341797, low: 125.6500015258789, close: 126.20999908447266 },\n                100: { date: 1617629400, open: 123.87000274658203, high: 126.16000366210938, low: 123.06999969482422, close: 125.9000015258789 },\n                101: { date: 1617283800, open: 123.66000366210938, high: 124.18000030517578, low: 122.48999786376953, close: 123 },\n                102: { date: 1617197400, open: 121.6500015258789, high: 123.5199966430664, low: 121.1500015258789, close: 122.1500015258789 },\n                103: { date: 1617111000, open: 120.11000061035156, high: 120.4000015258789, low: 118.86000061035156, close: 119.9000015258789 },\n                104: { date: 1617024600, open: 121.6500015258789, high: 122.58000183105469, low: 120.7300033569336, close: 121.38999938964844 },\n                105: { date: 1616765400, open: 120.3499984741211, high: 121.4800033569336, low: 118.91999816894531, close: 121.20999908447266 },\n                106: { date: 1616679000, open: 119.54000091552734, high: 121.66000366210938, low: 119, close: 120.58999633789062 },\n                107: { date: 1616592600, open: 122.81999969482422, high: 122.9000015258789, low: 120.06999969482422, close: 120.08999633789062 },\n                108: { date: 1616506200, open: 123.33000183105469, high: 124.23999786376953, low: 122.13999938964844, close: 122.54000091552734 },\n                109: { date: 1616419800, open: 120.33000183105469, high: 123.87000274658203, low: 120.26000213623047, close: 123.38999938964844 },\n                110: { date: 1616160600, open: 119.9000015258789, high: 121.43000030517578, low: 119.68000030517578, close: 119.98999786376953 },\n                111: { date: 1616074200, open: 122.87999725341797, high: 123.18000030517578, low: 120.31999969482422, close: 120.52999877929688 },\n                112: { date: 1615987800, open: 124.05000305175781, high: 125.86000061035156, low: 122.33999633789062, close: 124.76000213623047 },\n                113: { date: 1615901400, open: 125.69999694824219, high: 127.22000122070312, low: 124.72000122070312, close: 125.56999969482422 },\n                114: { date: 1615815000, open: 121.41000366210938, high: 124, low: 120.41999816894531, close: 123.98999786376953 },\n                115: { date: 1615559400, open: 120.4000015258789, high: 121.16999816894531, low: 119.16000366210938, close: 121.02999877929688 },\n                116: { date: 1615473000, open: 122.54000091552734, high: 123.20999908447266, low: 121.26000213623047, close: 121.95999908447266 },\n                117: { date: 1615386600, open: 121.69000244140625, high: 122.16999816894531, low: 119.44999694824219, close: 119.9800033569336 },\n                118: { date: 1615300200, open: 119.02999877929688, high: 122.05999755859375, low: 118.79000091552734, close: 121.08999633789062 },\n                119: { date: 1615213800, open: 120.93000030517578, high: 121, low: 116.20999908447266, close: 116.36000061035156 },\n                120: { date: 1614954600, open: 120.9800033569336, high: 121.94000244140625, low: 117.56999969482422, close: 121.41999816894531 },\n                121: { date: 1614868200, open: 121.75, high: 123.5999984741211, low: 118.62000274658203, close: 120.12999725341797 },\n                122: { date: 1614781800, open: 124.80999755859375, high: 125.70999908447266, low: 121.83999633789062, close: 122.05999755859375 },\n                123: { date: 1614695400, open: 128.41000366210938, high: 128.72000122070312, low: 125.01000213623047, close: 125.12000274658203 },\n                124: { date: 1614609000, open: 123.75, high: 127.93000030517578, low: 122.79000091552734, close: 127.79000091552734 },\n                125: { date: 1614349800, open: 122.58999633789062, high: 124.8499984741211, low: 121.19999694824219, close: 121.26000213623047 },\n                126: { date: 1614263400, open: 124.68000030517578, high: 126.45999908447266, low: 120.54000091552734, close: 120.98999786376953 },\n                127: { date: 1614177000, open: 124.94000244140625, high: 125.55999755859375, low: 122.2300033569336, close: 125.3499984741211 },\n                128: { date: 1614090600, open: 123.76000213623047, high: 126.70999908447266, low: 118.38999938964844, close: 125.86000061035156 },\n                129: { date: 1614004200, open: 128.00999450683594, high: 129.72000122070312, low: 125.5999984741211, close: 126 },\n                130: { date: 1613745000, open: 130.24000549316406, high: 130.7100067138672, low: 128.8000030517578, close: 129.8699951171875 },\n                131: { date: 1613658600, open: 129.1999969482422, high: 130, low: 127.41000366210938, close: 129.7100067138672 },\n                132: { date: 1613572200, open: 131.25, high: 132.22000122070312, low: 129.47000122070312, close: 130.83999633789062 },\n                133: { date: 1613485800, open: 135.49000549316406, high: 136.00999450683594, low: 132.7899932861328, close: 133.19000244140625 },\n                134: { date: 1613140200, open: 134.35000610351562, high: 135.52999877929688, low: 133.69000244140625, close: 135.3699951171875 },\n                135: { date: 1613053800, open: 135.89999389648438, high: 136.38999938964844, low: 133.77000427246094, close: 135.1300048828125 },\n                136: { date: 1612967400, open: 136.47999572753906, high: 136.99000549316406, low: 134.39999389648438, close: 135.38999938964844 },\n                137: { date: 1612881000, open: 136.6199951171875, high: 137.8800048828125, low: 135.85000610351562, close: 136.00999450683594 },\n                138: { date: 1612794600, open: 136.02999877929688, high: 136.9600067138672, low: 134.9199981689453, close: 136.91000366210938 },\n                139: { date: 1612535400, open: 137.35000610351562, high: 137.4199981689453, low: 135.86000061035156, close: 136.75999450683594 },\n                140: { amount: 0.205, date: 1612535400, type: \"DIVIDEND\", data: 0.205 },\n                141: { date: 1612449000, open: 136.3000030517578, high: 137.39999389648438, low: 134.58999633789062, close: 137.38999938964844 },\n                142: { date: 1612362600, open: 135.75999450683594, high: 135.77000427246094, low: 133.61000061035156, close: 133.94000244140625 },\n                143: { date: 1612276200, open: 135.72999572753906, high: 136.30999755859375, low: 134.61000061035156, close: 134.99000549316406 },\n                144: { date: 1612189800, open: 133.75, high: 135.3800048828125, low: 130.92999267578125, close: 134.13999938964844 },\n                145: { date: 1611930600, open: 135.8300018310547, high: 136.74000549316406, low: 130.2100067138672, close: 131.9600067138672 },\n                146: { date: 1611844200, open: 139.52000427246094, high: 141.99000549316406, low: 136.6999969482422, close: 137.08999633789062 },\n                147: { date: 1611757800, open: 143.42999267578125, high: 144.3000030517578, low: 140.41000366210938, close: 142.05999755859375 },\n                148: { date: 1611671400, open: 143.60000610351562, high: 144.3000030517578, low: 141.3699951171875, close: 143.16000366210938 },\n                149: { date: 1611585000, open: 143.07000732421875, high: 145.08999633789062, low: 136.5399932861328, close: 142.9199981689453 },\n                150: { date: 1611325800, open: 136.27999877929688, high: 139.85000610351562, low: 135.02000427246094, close: 139.07000732421875 },\n                151: { date: 1611239400, open: 133.8000030517578, high: 139.6699981689453, low: 133.58999633789062, close: 136.8699951171875 },\n                152: { date: 1611153000, open: 128.66000366210938, high: 132.49000549316406, low: 128.5500030517578, close: 132.02999877929688 },\n                153: { date: 1611066600, open: 127.77999877929688, high: 128.7100067138672, low: 126.94000244140625, close: 127.83000183105469 },\n                154: { date: 1610721000, open: 128.77999877929688, high: 130.22000122070312, low: 127, close: 127.13999938964844 },\n                155: { date: 1610634600, open: 130.8000030517578, high: 131, low: 128.75999450683594, close: 128.91000366210938 },\n                156: { date: 1610548200, open: 128.75999450683594, high: 131.4499969482422, low: 128.49000549316406, close: 130.88999938964844 },\n                157: { date: 1610461800, open: 128.5, high: 129.69000244140625, low: 126.86000061035156, close: 128.8000030517578 },\n                158: { date: 1610375400, open: 129.19000244140625, high: 130.1699981689453, low: 128.5, close: 128.97999572753906 },\n                159: { date: 1610116200, open: 132.42999267578125, high: 132.6300048828125, low: 130.22999572753906, close: 132.0500030517578 },\n                160: { date: 1610029800, open: 128.36000061035156, high: 131.6300048828125, low: 127.86000061035156, close: 130.9199981689453 },\n                161: { date: 1609943400, open: 127.72000122070312, high: 131.0500030517578, low: 126.37999725341797, close: 126.5999984741211 },\n                162: { date: 1609857000, open: 128.88999938964844, high: 131.74000549316406, low: 128.42999267578125, close: 131.00999450683594 },\n                163: { date: 1609770600, open: 133.52000427246094, high: 133.61000061035156, low: 126.76000213623047, close: 129.41000366210938 },\n                164: { date: 1609425000, open: 134.0800018310547, high: 134.74000549316406, low: 131.72000122070312, close: 132.69000244140625 },\n                165: { date: 1609338600, open: 135.5800018310547, high: 135.99000549316406, low: 133.39999389648438, close: 133.72000122070312 },\n                166: { date: 1609252200, open: 138.0500030517578, high: 138.7899932861328, low: 134.33999633789062, close: 134.8699951171875 },\n                167: { date: 1609165800, open: 133.99000549316406, high: 137.33999633789062, low: 133.50999450683594, close: 136.69000244140625 },\n                168: { date: 1608820200, open: 131.32000732421875, high: 133.4600067138672, low: 131.10000610351562, close: 131.97000122070312 },\n                169: { date: 1608733800, open: 132.16000366210938, high: 132.42999267578125, low: 130.77999877929688, close: 130.9600067138672 },\n                170: { date: 1608647400, open: 131.61000061035156, high: 134.41000366210938, low: 129.64999389648438, close: 131.8800048828125 },\n                171: { date: 1608561000, open: 125.0199966430664, high: 128.30999755859375, low: 123.44999694824219, close: 128.22999572753906 },\n                172: { date: 1608301800, open: 128.9600067138672, high: 129.10000610351562, low: 126.12000274658203, close: 126.66000366210938 },\n                173: { date: 1608215400, open: 128.89999389648438, high: 129.5800018310547, low: 128.0399932861328, close: 128.6999969482422 },\n                174: { date: 1608129000, open: 127.41000366210938, high: 128.3699951171875, low: 126.55999755859375, close: 127.80999755859375 },\n                175: { date: 1608042600, open: 124.33999633789062, high: 127.9000015258789, low: 124.12999725341797, close: 127.87999725341797 },\n                176: { date: 1607956200, open: 122.5999984741211, high: 123.3499984741211, low: 121.54000091552734, close: 121.77999877929688 },\n                177: { date: 1607697000, open: 122.43000030517578, high: 122.76000213623047, low: 120.55000305175781, close: 122.41000366210938 },\n                178: { date: 1607610600, open: 120.5, high: 123.87000274658203, low: 120.1500015258789, close: 123.23999786376953 },\n                179: { date: 1607524200, open: 124.52999877929688, high: 125.94999694824219, low: 121, close: 121.77999877929688 },\n                180: { date: 1607437800, open: 124.37000274658203, high: 124.9800033569336, low: 123.08999633789062, close: 124.37999725341797 },\n                181: { date: 1607351400, open: 122.30999755859375, high: 124.56999969482422, low: 122.25, close: 123.75 },\n                182: { date: 1607092200, open: 122.5999984741211, high: 122.86000061035156, low: 121.5199966430664, close: 122.25 },\n                183: { date: 1607005800, open: 123.5199966430664, high: 123.77999877929688, low: 122.20999908447266, close: 122.94000244140625 },\n                184: { date: 1606919400, open: 122.0199966430664, high: 123.37000274658203, low: 120.88999938964844, close: 123.08000183105469 },\n                185: { date: 1606833000, open: 121.01000213623047, high: 123.47000122070312, low: 120.01000213623047, close: 122.72000122070312 },\n                186: { date: 1606746600, open: 116.97000122070312, high: 120.97000122070312, low: 116.80999755859375, close: 119.05000305175781 },\n                187: { date: 1606487400, open: 116.56999969482422, high: 117.48999786376953, low: 116.22000122070312, close: 116.58999633789062 },\n                188: { date: 1606314600, open: 115.55000305175781, high: 116.75, low: 115.16999816894531, close: 116.02999877929688 },\n                189: { date: 1606228200, open: 113.91000366210938, high: 115.8499984741211, low: 112.58999633789062, close: 115.16999816894531 },\n                190: { date: 1606141800, open: 117.18000030517578, high: 117.62000274658203, low: 113.75, close: 113.8499984741211 },\n                191: { date: 1605882600, open: 118.63999938964844, high: 118.7699966430664, low: 117.29000091552734, close: 117.33999633789062 },\n                192: { date: 1605796200, open: 117.58999633789062, high: 119.05999755859375, low: 116.80999755859375, close: 118.63999938964844 },\n                193: { date: 1605709800, open: 118.61000061035156, high: 119.81999969482422, low: 118, close: 118.02999877929688 },\n                194: { date: 1605623400, open: 119.55000305175781, high: 120.66999816894531, low: 118.95999908447266, close: 119.38999938964844 },\n                195: { date: 1605537000, open: 118.91999816894531, high: 120.98999786376953, low: 118.1500015258789, close: 120.30000305175781 },\n                196: { date: 1605277800, open: 119.44000244140625, high: 119.66999816894531, low: 117.87000274658203, close: 119.26000213623047 },\n                197: { date: 1605191400, open: 119.62000274658203, high: 120.52999877929688, low: 118.56999969482422, close: 119.20999908447266 },\n                198: { date: 1605105000, open: 117.19000244140625, high: 119.62999725341797, low: 116.44000244140625, close: 119.48999786376953 },\n                199: { date: 1605018600, open: 115.55000305175781, high: 117.58999633789062, low: 114.12999725341797, close: 115.97000122070312 },\n                200: { date: 1605191400, open: 119.62000274658203, high: 120.52999877929688, low: 118.56999969482422, close: 119.20999908447266 },\n                201: { date: 1605105000, open: 117.19000244140625, high: 119.62999725341797, low: 116.44000244140625, close: 119.48999786376953 },\n                202: { date: 1605018600, open: 115.55000305175781, high: 117.58999633789062, low: 114.12999725341797, close: 115.97000122070312 },\n                203: { date: 1604932200, open: 120.5, high: 121.98999786376953, low: 116.05000305175781, close: 116.31999969482422 },\n                204: { date: 1604673000, open: 118.31999969482422, high: 119.19999694824219, low: 116.12999725341797, close: 118.69000244140625 },\n                205: { amount: 0.205, date: 1604673000, type: \"DIVIDEND\", data: 0.205 },\n                206: { date: 1604586600, open: 117.94999694824219, high: 119.62000274658203, low: 116.87000274658203, close: 119.02999877929688 },\n                207: { date: 1604500200, open: 114.13999938964844, high: 115.58999633789062, low: 112.3499984741211, close: 114.94999694824219 },\n                208: { date: 1604413800, open: 109.66000366210938, high: 111.48999786376953, low: 108.7300033569336, close: 110.44000244140625 },\n                209: { date: 1604327400, open: 109.11000061035156, high: 110.68000030517578, low: 107.31999969482422, close: 108.7699966430664 },\n                210: { date: 1604064600, open: 111.05999755859375, high: 111.98999786376953, low: 107.72000122070312, close: 108.86000061035156 },\n                211: { date: 1603978200, open: 112.37000274658203, high: 116.93000030517578, low: 112.19999694824219, close: 115.31999969482422 },\n                212: { date: 1603891800, open: 115.05000305175781, high: 115.43000030517578, low: 111.0999984741211, close: 111.19999694824219 },\n                213: { date: 1603805400, open: 115.48999786376953, high: 117.27999877929688, low: 114.54000091552734, close: 116.5999984741211 },\n                214: { date: 1603719000, open: 114.01000213623047, high: 116.55000305175781, low: 112.87999725341797, close: 115.05000305175781 },\n                215: { date: 1603459800, open: 116.38999938964844, high: 116.55000305175781, low: 114.27999877929688, close: 115.04000091552734 },\n                216: { date: 1603373400, open: 117.44999694824219, high: 118.04000091552734, low: 114.58999633789062, close: 115.75 },\n                217: { date: 1603287000, open: 116.66999816894531, high: 118.70999908447266, low: 116.44999694824219, close: 116.87000274658203 },\n                218: { date: 1603200600, open: 116.19999694824219, high: 118.9800033569336, low: 115.62999725341797, close: 117.51000213623047 },\n                219: { date: 1603114200, open: 119.95999908447266, high: 120.41999816894531, low: 115.66000366210938, close: 115.9800033569336 },\n                220: { date: 1602855000, open: 121.27999877929688, high: 121.55000305175781, low: 118.80999755859375, close: 119.0199966430664 },\n                221: { date: 1602768600, open: 118.72000122070312, high: 121.19999694824219, low: 118.1500015258789, close: 120.70999908447266 },\n                222: { date: 1602682200, open: 121, high: 123.02999877929688, low: 119.62000274658203, close: 121.19000244140625 },\n                223: { date: 1602595800, open: 125.2699966430664, high: 125.38999938964844, low: 119.6500015258789, close: 121.0999984741211 },\n                224: { date: 1602509400, open: 120.05999755859375, high: 125.18000030517578, low: 119.27999877929688, close: 124.4000015258789 },\n                225: { date: 1602250200, open: 115.27999877929688, high: 117, low: 114.91999816894531, close: 116.97000122070312 },\n                226: { date: 1602163800, open: 116.25, high: 116.4000015258789, low: 114.58999633789062, close: 114.97000122070312 },\n                227: { date: 1602077400, open: 114.62000274658203, high: 115.55000305175781, low: 114.12999725341797, close: 115.08000183105469 },\n                228: { date: 1601991000, open: 115.69999694824219, high: 116.12000274658203, low: 112.25, close: 113.16000366210938 },\n                229: { date: 1601904600, open: 113.91000366210938, high: 116.6500015258789, low: 113.55000305175781, close: 116.5 },\n                230: { date: 1601645400, open: 112.88999938964844, high: 115.37000274658203, low: 112.22000122070312, close: 113.0199966430664 },\n                231: { date: 1601559000, open: 117.63999938964844, high: 117.72000122070312, low: 115.83000183105469, close: 116.79000091552734 },\n                232: { date: 1601472600, open: 113.79000091552734, high: 117.26000213623047, low: 113.62000274658203, close: 115.80999755859375 },\n                233: { date: 1601386200, open: 114.55000305175781, high: 115.30999755859375, low: 113.56999969482422, close: 114.08999633789062 },\n                234: { date: 1601299800, open: 115.01000213623047, high: 115.31999969482422, low: 112.77999877929688, close: 114.95999908447266 },\n                235: { date: 1601040600, open: 108.43000030517578, high: 112.44000244140625, low: 107.66999816894531, close: 112.27999877929688 },\n                236: { date: 1600954200, open: 105.16999816894531, high: 110.25, low: 105, close: 108.22000122070312 },\n                237: { date: 1600867800, open: 111.62000274658203, high: 112.11000061035156, low: 106.7699966430664, close: 107.12000274658203 },\n                238: { date: 1600781400, open: 112.68000030517578, high: 112.86000061035156, low: 109.16000366210938, close: 111.80999755859375 },\n                239: { date: 1600695000, open: 104.54000091552734, high: 110.19000244140625, low: 103.0999984741211, close: 110.08000183105469 },\n                240: { date: 1600435800, open: 110.4000015258789, high: 110.87999725341797, low: 106.08999633789062, close: 106.83999633789062 },\n                241: { date: 1600349400, open: 109.72000122070312, high: 112.19999694824219, low: 108.70999908447266, close: 110.33999633789062 },\n                242: { date: 1600263000, open: 115.2300033569336, high: 116, low: 112.04000091552734, close: 112.12999725341797 },\n                243: { date: 1600176600, open: 118.33000183105469, high: 118.83000183105469, low: 113.61000061035156, close: 115.54000091552734 },\n                244: { date: 1600090200, open: 114.72000122070312, high: 115.93000030517578, low: 112.80000305175781, close: 115.36000061035156 },\n                245: { date: 1599831000, open: 114.56999969482422, high: 115.2300033569336, low: 110, close: 112 },\n                246: { date: 1599744600, open: 120.36000061035156, high: 120.5, low: 112.5, close: 113.48999786376953 },\n                247: { date: 1599658200, open: 117.26000213623047, high: 119.13999938964844, low: 115.26000213623047, close: 117.31999969482422 },\n                248: { date: 1599571800, open: 113.94999694824219, high: 118.98999786376953, low: 112.68000030517578, close: 112.81999969482422 },\n                249: { date: 1599226200, open: 120.06999969482422, high: 123.69999694824219, low: 110.88999938964844, close: 120.95999908447266 },\n                250: { date: 1599139800, open: 126.91000366210938, high: 128.83999633789062, low: 120.5, close: 120.87999725341797 },\n                251: { date: 1599053400, open: 137.58999633789062, high: 137.97999572753906, low: 127, close: 131.39999389648438 },\n                252: { date: 1598967000, open: 132.75999450683594, high: 134.8000030517578, low: 130.52999877929688, close: 134.17999267578125 },\n                253: { date: 1598880600, open: 127.58000183105469, high: 131, low: 126, close: 129.0399932861328 },\n                254: { date: 1598880600, numerator: 4, denominator: 1, splitRatio: \"4:1\", type: \"SPLIT\" },\n                255: { date: 1598621400, open: 126.01249694824219, high: 126.44249725341797, low: 124.57749938964844, close: 124.80750274658203 },\n                256: { date: 1598535000, open: 127.14250183105469, high: 127.48500061035156, low: 123.8324966430664, close: 125.01000213623047 },\n            },\n            trailingPE: stock.summaryDetail.trailingPE.fmt,\n            forwardPE: stock.summaryDetail.forwardPE.fmt,\n            totalCash: stock.financialData.totalCash.fmt,\n            totalDebt: stock.financialData.totalDebt.fmt,\n            yearly: transformYearly(stock.earnings.financialsChart.yearly),\n        }\n    }\n\n}","export const ApiKey = '669050e50bmsh7184037b5ec54b3p177eecjsnfb99417f09b8';"],"sourceRoot":""}